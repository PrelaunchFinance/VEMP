{
  "contractName": "OracleInterface",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "requestPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "hasPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"requestPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\",\"kind\":\"dev\",\"methods\":{\"getPrice(bytes32,uint256)\":{\"details\":\"If the price is not available, the method reverts.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"},\"returns\":{\"_0\":\"int256 representing the resolved price for the given identifier and timestamp.\"}},\"hasPrice(bytes32,uint256)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"},\"returns\":{\"_0\":\"bool if the DVM has resolved to a price for the given identifier and timestamp.\"}},\"requestPrice(bytes32,uint256)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"}}},\"title\":\"Financial contract facing Oracle interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPrice(bytes32,uint256)\":{\"notice\":\"Gets the price for `identifier` and `time` if it has already been requested and resolved.\"},\"hasPrice(bytes32,uint256)\":{\"notice\":\"Whether the price for `identifier` and `time` is available.\"},\"requestPrice(bytes32,uint256)\":{\"notice\":\"Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/oracle/interfaces/OracleInterface.sol\":\"OracleInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uma/core/contracts/oracle/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x426df5f5518159e244ceec654dfcb8cff93e748870eb7c59649881ff492669b5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fa1bdef93a101531c379fc08b0e353d16024aa9abc22e7c2873e8652199a40dd\",\"dweb:/ipfs/QmRCp9DVdUkAkwzWXwkpa1QgrBH48KqjmF3qXCd9tmsXxB\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.6.0;\n\n/**\n * @title Financial contract facing Oracle interface.\n * @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\n */\nabstract contract OracleInterface {\n    /**\n     * @notice Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\n     * @dev Time must be in the past and the identifier must be supported.\n     * @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n     * @param time unix timestamp for the price request.\n     */\n    function requestPrice(bytes32 identifier, uint256 time) public virtual;\n\n    /**\n     * @notice Whether the price for `identifier` and `time` is available.\n     * @dev Time must be in the past and the identifier must be supported.\n     * @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n     * @param time unix timestamp for the price request.\n     * @return bool if the DVM has resolved to a price for the given identifier and timestamp.\n     */\n    function hasPrice(bytes32 identifier, uint256 time) public view virtual returns (bool);\n\n    /**\n     * @notice Gets the price for `identifier` and `time` if it has already been requested and resolved.\n     * @dev If the price is not available, the method reverts.\n     * @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n     * @param time unix timestamp for the price request.\n     * @return int256 representing the resolved price for the given identifier and timestamp.\n     */\n    function getPrice(bytes32 identifier, uint256 time) public view virtual returns (int256);\n}\n",
  "sourcePath": "@uma/core/contracts/oracle/interfaces/OracleInterface.sol",
  "ast": {
    "absolutePath": "@uma/core/contracts/oracle/interfaces/OracleInterface.sol",
    "exportedSymbols": {
      "OracleInterface": [
        9987
      ]
    },
    "id": 9988,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9957,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:33"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9958,
          "nodeType": "StructuredDocumentation",
          "src": "67:175:33",
          "text": " @title Financial contract facing Oracle interface.\n @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."
        },
        "fullyImplemented": false,
        "id": 9987,
        "linearizedBaseContracts": [
          9987
        ],
        "name": "OracleInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 9959,
              "nodeType": "StructuredDocumentation",
              "src": "283:373:33",
              "text": " @notice Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\n @dev Time must be in the past and the identifier must be supported.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request."
            },
            "functionSelector": "68ad8ae3",
            "id": 9966,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9961,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9966,
                  "src": "683:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9960,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9963,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9966,
                  "src": "703:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:34:33"
            },
            "returnParameters": {
              "id": 9965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "731:0:33"
            },
            "scope": 9987,
            "src": "661:71:33",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": {
              "id": 9967,
              "nodeType": "StructuredDocumentation",
              "src": "738:431:33",
              "text": " @notice Whether the price for `identifier` and `time` is available.\n @dev Time must be in the past and the identifier must be supported.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request.\n @return bool if the DVM has resolved to a price for the given identifier and timestamp."
            },
            "functionSelector": "a03e881a",
            "id": 9976,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9969,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9976,
                  "src": "1192:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9968,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9971,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9976,
                  "src": "1212:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1191:34:33"
            },
            "returnParameters": {
              "id": 9975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9974,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9976,
                  "src": "1255:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9973,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1254:6:33"
            },
            "scope": 9987,
            "src": "1174:87:33",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": {
              "id": 9977,
              "nodeType": "StructuredDocumentation",
              "src": "1267:448:33",
              "text": " @notice Gets the price for `identifier` and `time` if it has already been requested and resolved.\n @dev If the price is not available, the method reverts.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request.\n @return int256 representing the resolved price for the given identifier and timestamp."
            },
            "functionSelector": "c9280f06",
            "id": 9986,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9979,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9986,
                  "src": "1738:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9978,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1738:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9981,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9986,
                  "src": "1758:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1758:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1737:34:33"
            },
            "returnParameters": {
              "id": 9985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9984,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9986,
                  "src": "1801:6:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 9983,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1800:8:33"
            },
            "scope": 9987,
            "src": "1720:89:33",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 9988,
        "src": "243:1568:33"
      }
    ],
    "src": "42:1770:33"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@uma/core/contracts/oracle/interfaces/OracleInterface.sol",
      "exportedSymbols": {
        "OracleInterface": [
          9987
        ]
      },
      "license": "AGPL-3.0-only"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 9957,
        "name": "PragmaDirective",
        "src": "42:23:33"
      },
      {
        "attributes": {
          "abstract": true,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            9987
          ],
          "name": "OracleInterface",
          "scope": 9988
        },
        "children": [
          {
            "attributes": {
              "text": " @title Financial contract facing Oracle interface.\n @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."
            },
            "id": 9958,
            "name": "StructuredDocumentation",
            "src": "67:175:33"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "68ad8ae3",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "requestPrice",
              "overrides": null,
              "scope": 9987,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\n @dev Time must be in the past and the identifier must be supported.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request."
                },
                "id": 9959,
                "name": "StructuredDocumentation",
                "src": "283:373:33"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "identifier",
                      "overrides": null,
                      "scope": 9966,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 9960,
                        "name": "ElementaryTypeName",
                        "src": "683:7:33"
                      }
                    ],
                    "id": 9961,
                    "name": "VariableDeclaration",
                    "src": "683:18:33"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "time",
                      "overrides": null,
                      "scope": 9966,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 9962,
                        "name": "ElementaryTypeName",
                        "src": "703:7:33"
                      }
                    ],
                    "id": 9963,
                    "name": "VariableDeclaration",
                    "src": "703:12:33"
                  }
                ],
                "id": 9964,
                "name": "ParameterList",
                "src": "682:34:33"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 9965,
                "name": "ParameterList",
                "src": "731:0:33"
              }
            ],
            "id": 9966,
            "name": "FunctionDefinition",
            "src": "661:71:33"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "a03e881a",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "hasPrice",
              "overrides": null,
              "scope": 9987,
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Whether the price for `identifier` and `time` is available.\n @dev Time must be in the past and the identifier must be supported.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request.\n @return bool if the DVM has resolved to a price for the given identifier and timestamp."
                },
                "id": 9967,
                "name": "StructuredDocumentation",
                "src": "738:431:33"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "identifier",
                      "overrides": null,
                      "scope": 9976,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 9968,
                        "name": "ElementaryTypeName",
                        "src": "1192:7:33"
                      }
                    ],
                    "id": 9969,
                    "name": "VariableDeclaration",
                    "src": "1192:18:33"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "time",
                      "overrides": null,
                      "scope": 9976,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 9970,
                        "name": "ElementaryTypeName",
                        "src": "1212:7:33"
                      }
                    ],
                    "id": 9971,
                    "name": "VariableDeclaration",
                    "src": "1212:12:33"
                  }
                ],
                "id": 9972,
                "name": "ParameterList",
                "src": "1191:34:33"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 9976,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 9973,
                        "name": "ElementaryTypeName",
                        "src": "1255:4:33"
                      }
                    ],
                    "id": 9974,
                    "name": "VariableDeclaration",
                    "src": "1255:4:33"
                  }
                ],
                "id": 9975,
                "name": "ParameterList",
                "src": "1254:6:33"
              }
            ],
            "id": 9976,
            "name": "FunctionDefinition",
            "src": "1174:87:33"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "c9280f06",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPrice",
              "overrides": null,
              "scope": 9987,
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Gets the price for `identifier` and `time` if it has already been requested and resolved.\n @dev If the price is not available, the method reverts.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request.\n @return int256 representing the resolved price for the given identifier and timestamp."
                },
                "id": 9977,
                "name": "StructuredDocumentation",
                "src": "1267:448:33"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "identifier",
                      "overrides": null,
                      "scope": 9986,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 9978,
                        "name": "ElementaryTypeName",
                        "src": "1738:7:33"
                      }
                    ],
                    "id": 9979,
                    "name": "VariableDeclaration",
                    "src": "1738:18:33"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "time",
                      "overrides": null,
                      "scope": 9986,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 9980,
                        "name": "ElementaryTypeName",
                        "src": "1758:7:33"
                      }
                    ],
                    "id": 9981,
                    "name": "VariableDeclaration",
                    "src": "1758:12:33"
                  }
                ],
                "id": 9982,
                "name": "ParameterList",
                "src": "1737:34:33"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 9986,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "int256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "int256",
                          "type": "int256"
                        },
                        "id": 9983,
                        "name": "ElementaryTypeName",
                        "src": "1801:6:33"
                      }
                    ],
                    "id": 9984,
                    "name": "VariableDeclaration",
                    "src": "1801:6:33"
                  }
                ],
                "id": 9985,
                "name": "ParameterList",
                "src": "1800:8:33"
              }
            ],
            "id": 9986,
            "name": "FunctionDefinition",
            "src": "1720:89:33"
          }
        ],
        "id": 9987,
        "name": "ContractDefinition",
        "src": "243:1568:33"
      }
    ],
    "id": 9988,
    "name": "SourceUnit",
    "src": "42:1770:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-04-26T02:01:05.183Z",
  "devdoc": {
    "details": "Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.",
    "kind": "dev",
    "methods": {
      "getPrice(bytes32,uint256)": {
        "details": "If the price is not available, the method reverts.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        },
        "returns": {
          "_0": "int256 representing the resolved price for the given identifier and timestamp."
        }
      },
      "hasPrice(bytes32,uint256)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        },
        "returns": {
          "_0": "bool if the DVM has resolved to a price for the given identifier and timestamp."
        }
      },
      "requestPrice(bytes32,uint256)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        }
      }
    },
    "title": "Financial contract facing Oracle interface.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getPrice(bytes32,uint256)": {
        "notice": "Gets the price for `identifier` and `time` if it has already been requested and resolved."
      },
      "hasPrice(bytes32,uint256)": {
        "notice": "Whether the price for `identifier` and `time` is available."
      },
      "requestPrice(bytes32,uint256)": {
        "notice": "Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair."
      }
    },
    "version": 1
  }
}