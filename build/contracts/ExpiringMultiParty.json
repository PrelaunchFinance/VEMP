{
  "contractName": "ExpiringMultiParty",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "expirationTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalLiveness",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "finderAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "timerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "financialProductLibraryAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "externalVariableExpirationDAOAddress",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "priceFeedIdentifier",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "minSponsorTokens",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "liquidationLiveness",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "collateralRequirement",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "disputeBondPercentage",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "sponsorDisputeRewardPercentage",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "disputerDisputeRewardPercentage",
              "type": "tuple"
            }
          ],
          "internalType": "struct Liquidatable.ConstructorParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "ContractExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "disputeSucceeded",
          "type": "bool"
        }
      ],
      "name": "DisputeSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "originalExpirationTimestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shutdownTimestamp",
          "type": "uint256"
        }
      ],
      "name": "EmergencyShutdown",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "updateTimestamp",
          "type": "uint256"
        }
      ],
      "name": "EmergencyUpdateDAOAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "EndedSponsorPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FinalFeesPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensOutstanding",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockedCollateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidatedCollateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationTime",
          "type": "uint256"
        }
      ],
      "name": "LiquidationCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "disputeBondAmount",
          "type": "uint256"
        }
      ],
      "name": "LiquidationDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paidToLiquidator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paidToDisputer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paidToSponsor",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "enum Liquidatable.Status",
          "name": "liquidationStatus",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "settlementPrice",
          "type": "uint256"
        }
      ],
      "name": "LiquidationWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "NewSponsor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "PositionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "regularFee",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lateFee",
          "type": "uint256"
        }
      ],
      "name": "RegularFeesPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "numTokensRepaid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newTokenCount",
          "type": "uint256"
        }
      ],
      "name": "Repay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSponsor",
          "type": "address"
        }
      ],
      "name": "RequestTransferPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSponsor",
          "type": "address"
        }
      ],
      "name": "RequestTransferPositionCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSponsor",
          "type": "address"
        }
      ],
      "name": "RequestTransferPositionExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralReturned",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokensBurned",
          "type": "uint256"
        }
      ],
      "name": "SettleExpiredPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "originalExpirationTimestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shutdownTimestamp",
          "type": "uint256"
        }
      ],
      "name": "VariableExpiration",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralAddress",
          "type": "address"
        }
      ],
      "name": "_getSyntheticDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelTransferPosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralRequirement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractState",
      "outputs": [
        {
          "internalType": "enum PricelessPositionManager.ContractState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "numTokens",
          "type": "tuple"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "minCollateralPerToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "maxCollateralPerToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "maxTokensToLiquidate",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "createLiquidation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "tokensLiquidated",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "finalFeeBond",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cumulativeFeeMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "depositTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "dispute",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalPaid",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disputeBondPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disputerDisputeRewardPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyShutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "DAOAddress",
          "type": "address"
        }
      ],
      "name": "emergencyUpdateDAOAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expirationTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "financialProductLibrary",
      "outputs": [
        {
          "internalType": "contract FinancialProductLibrary",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finder",
      "outputs": [
        {
          "internalType": "contract FinderInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "getCollateral",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "getLiquidations",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address"
            },
            {
              "internalType": "enum Liquidatable.Status",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "liquidationTime",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "tokensOutstanding",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "lockedCollateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "liquidatedCollateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "rawUnitCollateral",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "settlementPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "finalFee",
              "type": "tuple"
            }
          ],
          "internalType": "struct Liquidatable.LiquidationData[]",
          "name": "liquidationData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "getOutstandingRegularFees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "regularFee",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "latePenalty",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalPaid",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gulp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationLiveness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "liquidations",
      "outputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "enum Liquidatable.Status",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "liquidationTime",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "tokensOutstanding",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "lockedCollateral",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "liquidatedCollateral",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "rawUnitCollateral",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "settlementPrice",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "finalFee",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minSponsorTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payRegularFees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pfc",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "tokensOutstanding",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "withdrawalRequestPassTimestamp",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "withdrawalRequestAmount",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "rawCollateral",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "transferPositionRequestPassTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rawLiquidationCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rawTotalPositionCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "numTokens",
          "type": "tuple"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remargin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "numTokens",
          "type": "tuple"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestTransferPosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "requestWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settleExpired",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sponsorDisputeRewardPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCurrency",
      "outputs": [
        {
          "internalType": "contract ExpandedIERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPositionCollateral",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokensOutstanding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSponsorAddress",
          "type": "address"
        }
      ],
      "name": "transferPositionPassedRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "price",
          "type": "tuple"
        }
      ],
      "name": "transformCollateralRequirement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "price",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "requestTime",
          "type": "uint256"
        }
      ],
      "name": "transformPrice",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestTime",
          "type": "uint256"
        }
      ],
      "name": "transformPriceIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "settlementPrice",
          "type": "uint256"
        }
      ],
      "name": "variableExpiration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "withdrawLiquidation",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "payToSponsor",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "payToLiquidator",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "payToDisputer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "paidToSponsor",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "paidToLiquidator",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "paidToDisputer",
              "type": "tuple"
            }
          ],
          "internalType": "struct Liquidatable.RewardsData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawPassedRequest",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalLiveness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLiveness\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"finderAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"timerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"financialProductLibraryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"externalVariableExpirationDAOAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"priceFeedIdentifier\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"minSponsorTokens\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"liquidationLiveness\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralRequirement\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"disputeBondPercentage\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"sponsorDisputeRewardPercentage\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"disputerDisputeRewardPercentage\",\"type\":\"tuple\"}],\"internalType\":\"struct Liquidatable.ConstructorParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ContractExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disputeSucceeded\",\"type\":\"bool\"}],\"name\":\"DisputeSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalExpirationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shutdownTimestamp\",\"type\":\"uint256\"}],\"name\":\"EmergencyShutdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updateTimestamp\",\"type\":\"uint256\"}],\"name\":\"EmergencyUpdateDAOAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"EndedSponsorPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FinalFeesPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensOutstanding\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedCollateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationTime\",\"type\":\"uint256\"}],\"name\":\"LiquidationCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeBondAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidationDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidToLiquidator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidToDisputer\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidToSponsor\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum Liquidatable.Status\",\"name\":\"liquidationStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"settlementPrice\",\"type\":\"uint256\"}],\"name\":\"LiquidationWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"NewSponsor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"PositionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"regularFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lateFee\",\"type\":\"uint256\"}],\"name\":\"RegularFeesPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numTokensRepaid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newTokenCount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSponsor\",\"type\":\"address\"}],\"name\":\"RequestTransferPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSponsor\",\"type\":\"address\"}],\"name\":\"RequestTransferPositionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSponsor\",\"type\":\"address\"}],\"name\":\"RequestTransferPositionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralReturned\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokensBurned\",\"type\":\"uint256\"}],\"name\":\"SettleExpiredPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalExpirationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shutdownTimestamp\",\"type\":\"uint256\"}],\"name\":\"VariableExpiration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralAddress\",\"type\":\"address\"}],\"name\":\"_getSyntheticDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelTransferPosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralRequirement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractState\",\"outputs\":[{\"internalType\":\"enum PricelessPositionManager.ContractState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"numTokens\",\"type\":\"tuple\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"minCollateralPerToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"maxCollateralPerToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"maxTokensToLiquidate\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"createLiquidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensLiquidated\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFeeBond\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cumulativeFeeMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"dispute\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalPaid\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputeBondPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputerDisputeRewardPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyShutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"DAOAddress\",\"type\":\"address\"}],\"name\":\"emergencyUpdateDAOAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expirationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"financialProductLibrary\",\"outputs\":[{\"internalType\":\"contract FinancialProductLibrary\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"getLiquidations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"enum Liquidatable.Status\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"liquidationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"lockedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"liquidatedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawUnitCollateral\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"settlementPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFee\",\"type\":\"tuple\"}],\"internalType\":\"struct Liquidatable.LiquidationData[]\",\"name\":\"liquidationData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getOutstandingRegularFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"regularFee\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"latePenalty\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalPaid\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gulp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"enum Liquidatable.Status\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"liquidationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"lockedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"liquidatedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawUnitCollateral\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"settlementPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFee\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSponsorTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payRegularFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pfc\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalRequestPassTimestamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"withdrawalRequestAmount\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawCollateral\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"transferPositionRequestPassTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rawLiquidationCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rawTotalPositionCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"numTokens\",\"type\":\"tuple\"}],\"name\":\"redeem\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"numTokens\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestTransferPosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"requestWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleExpired\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sponsorDisputeRewardPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCurrency\",\"outputs\":[{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPositionCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensOutstanding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSponsorAddress\",\"type\":\"address\"}],\"name\":\"transferPositionPassedRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"price\",\"type\":\"tuple\"}],\"name\":\"transformCollateralRequirement\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"price\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"name\":\"transformPrice\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"name\":\"transformPriceIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"settlementPrice\",\"type\":\"uint256\"}],\"name\":\"variableExpiration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"withdrawLiquidation\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"payToSponsor\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"payToLiquidator\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"payToDisputer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"paidToSponsor\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"paidToLiquidator\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"paidToDisputer\",\"type\":\"tuple\"}],\"internalType\":\"struct Liquidatable.RewardsData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPassedRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"params\":\"struct to define input parameters for construction of Liquidatable. Some params are fed directly into the PricelessPositionManager's constructor within the inheritance tree.\"}},\"create((uint256),(uint256))\":{\"details\":\"Reverts if minting these tokens would put the position's collateralization ratio below the global collateralization ratio. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.This contract must have the Minter role for the `tokenCurrency`.\",\"params\":{\"collateralAmount\":\"is the number of collateral tokens to collateralize the position with\",\"numTokens\":\"is the number of tokens to mint from the position.\"}},\"createLiquidation(address,(uint256),(uint256),(uint256),uint256)\":{\"details\":\"This method generates an ID that will uniquely identify liquidation for the sponsor. This contract must be approved to spend at least `tokensLiquidated` of `tokenCurrency` and at least `finalFeeBond` of `collateralCurrency`.This contract must have the Burner role for the `tokenCurrency`.\",\"params\":{\"deadline\":\"abort the liquidation if the transaction is mined after this timestamp.\",\"maxCollateralPerToken\":\"abort the liquidation if the position's collateral per token exceeds this value.\",\"maxTokensToLiquidate\":\"max number of tokens to liquidate.\",\"minCollateralPerToken\":\"abort the liquidation if the position's collateral per token is below this value.\",\"sponsor\":\"address of the sponsor to liquidate.\"},\"returns\":{\"finalFeeBond\":\"amount of collateral to be posted by liquidator and returned if not disputed successfully.\",\"liquidationId\":\"ID of the newly created liquidation.\",\"tokensLiquidated\":\"amount of synthetic tokens removed and liquidated from the `sponsor`'s position.\"}},\"deposit((uint256))\":{\"details\":\"Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\",\"params\":{\"collateralAmount\":\"total amount of collateral tokens to be sent to the sponsor's position.\"}},\"depositTo(address,(uint256))\":{\"details\":\"Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\",\"params\":{\"collateralAmount\":\"total amount of collateral tokens to be sent to the sponsor's position.\",\"sponsor\":\"the sponsor to credit the deposit to.\"}},\"dispute(uint256,address)\":{\"details\":\"Can only dispute a liquidation before the liquidation expires and if there are no other pending disputes. This contract must be approved to spend at least the dispute bond amount of `collateralCurrency`. This dispute bond amount is calculated from `disputeBondPercentage` times the collateral in the liquidation.\",\"params\":{\"liquidationId\":\"of the disputed liquidation.\",\"sponsor\":\"the address of the sponsor whose liquidation is being disputed.\"},\"returns\":{\"totalPaid\":\"amount of collateral charged to disputer (i.e. final fee bond + dispute bond).\"}},\"emergencyShutdown()\":{\"details\":\"Only the governor can call this function as they are permissioned within the `FinancialContractAdmin`. Upon emergency shutdown, the contract settlement time is set to the shutdown time. This enables withdrawal to occur via the standard `settleExpired` function. Contract state is set to `ExpiredPriceRequested` which prevents re-entry into this function or the `expire` function. No fees are paid when calling `emergencyShutdown` as the governor who would call the function would also receive the fees.\"},\"emergencyUpdateDAOAddress(address)\":{\"details\":\"Only the governor or authorized DAO can call this function. The new DAOAddress will be authorized to expire the contract, and the old address will be deauthorized.\"},\"expire()\":{\"details\":\"this function can only be called once the contract is expired and can't be re-called.\"},\"getCollateral(address)\":{\"details\":\"This is necessary because the struct returned by the positions() method shows rawCollateral, which isn't a user-readable value.This method accounts for pending regular fees that have not yet been withdrawn from this contract, for example if the `lastPaymentTime != currentTime`.\",\"params\":{\"sponsor\":\"address whose collateral amount is retrieved.\"},\"returns\":{\"_0\":\"collateralAmount amount of collateral within a sponsors position.\"}},\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current Testable timestamp.\"}},\"getLiquidations(address)\":{\"params\":{\"sponsor\":\"address of the position sponsor.\"},\"returns\":{\"liquidationData\":\"array of all liquidation information for the given sponsor address.\"}},\"getOutstandingRegularFees(uint256)\":{\"details\":\"This returns 0 and exit early if there is no pfc, fees were already paid during the current block, or the fee rate is 0.\",\"returns\":{\"latePenalty\":\"outstanding unpaid late fee for being late in previous fee payments.\",\"regularFee\":\"outstanding unpaid regular fee.\",\"totalPaid\":\"Amount of collateral that the contract paid (sum of the amount paid to the Store and caller).\"}},\"gulp()\":{\"details\":\"Multiplying the `cumulativeFeeMultiplier` by the ratio of non-PfC-collateral :: PfC-collateral effectively pays all sponsors a pro-rata portion of the excess collateral.This will revert if PfC is 0 and this contract's collateral balance > 0.\"},\"payRegularFees()\":{\"details\":\"These must be paid periodically for the life of the contract. If the contract has not paid its regular fee in a week or more then a late penalty is applied which is sent to the caller. If the amount of fees owed are greater than the pfc, then this will pay as much as possible from the available collateral. An event is only fired if the fees charged are greater than 0.\",\"returns\":{\"_0\":\"totalPaid Amount of collateral that the contract paid (sum of the amount paid to the Store and caller). This returns 0 and exit early if there is no pfc, fees were already paid during the current block, or the fee rate is 0.\"}},\"pfc()\":{\"details\":\"This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\",\"returns\":{\"_0\":\"pfc value for equal to the current profit from corruption denominated in collateral currency.\"}},\"redeem((uint256))\":{\"details\":\"Can only be called by a token sponsor. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend at least `numTokens` of `tokenCurrency`.This contract must have the Burner role for the `tokenCurrency`.\",\"params\":{\"numTokens\":\"is the number of tokens to be burnt for a commensurate amount of collateral.\"},\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}},\"remargin()\":{\"details\":\"This is supposed to be implemented by any contract that inherits `AdministrateeInterface` and callable only by the Governor contract. This method is therefore minimally implemented in this contract and does nothing.\"},\"repay((uint256))\":{\"details\":\"Can only be called by token sponsor. This contract must be approved to spend `numTokens` of `tokenCurrency`.This contract must have the Burner role for the `tokenCurrency`.\",\"params\":{\"numTokens\":\"is the number of tokens to be burnt from the sponsor's debt position.\"}},\"requestTransferPosition()\":{\"details\":\"The liveness length is the same as the withdrawal liveness.\"},\"requestWithdrawal((uint256))\":{\"details\":\"The request will be pending for `withdrawalLiveness`, during which the position can be liquidated.\",\"params\":{\"collateralAmount\":\"the amount of collateral requested to withdraw\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}},\"settleExpired()\":{\"details\":\"This burns all tokens from the caller of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend `tokenCurrency` at least up to the caller's full balance.This contract must have the Burner role for the `tokenCurrency`.\",\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}},\"totalPositionCollateral()\":{\"details\":\"This method accounts for pending regular fees that have not yet been withdrawn from this contract, for example if the `lastPaymentTime != currentTime`.\",\"returns\":{\"_0\":\"totalCollateral amount of all collateral within the Expiring Multi Party Contract.\"}},\"transferPositionPassedRequest(address)\":{\"details\":\"Transferring positions can only occur if the recipient does not already have a position.\",\"params\":{\"newSponsorAddress\":\"is the address to which the position will be transferred.\"}},\"transformCollateralRequirement((uint256))\":{\"details\":\"This method should never revert.\",\"params\":{\"price\":\"input price used as an input to transform the collateral requirement.\"},\"returns\":{\"_0\":\"transformedCollateralRequirement collateral requirement with transformation applied to it.\"}},\"transformPrice((uint256),uint256)\":{\"details\":\"This method should never revert.\",\"params\":{\"price\":\"input price to be transformed.\",\"requestTime\":\"timestamp the oraclePrice was requested at.\"},\"returns\":{\"_0\":\"transformedPrice price with the transformation function applied to it.\"}},\"transformPriceIdentifier(uint256)\":{\"details\":\"This method should never revert.\",\"params\":{\"requestTime\":\"timestamp the identifier is to be used at.\"},\"returns\":{\"_0\":\"transformedPrice price with the transformation function applied to it.\"}},\"variableExpiration(uint256)\":{\"details\":\"Only the governor or authorized DAO can call this function. Upon variable shutdown, the contract settlement time is set to the shutdown time. This enables withdrawal to occur via the standard `settleExpired` function.\"},\"withdraw((uint256))\":{\"details\":\"Reverts if the withdrawal puts this position's collateralization ratio below the global collateralization ratio. In that case, use `requestWithdrawal`. Might not withdraw the full requested amount to account for precision loss.\",\"params\":{\"collateralAmount\":\"is the amount of collateral to withdraw.\"},\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}},\"withdrawLiquidation(uint256,address)\":{\"details\":\"If the dispute SUCCEEDED: the sponsor, liquidator, and disputer are eligible for payment. If the dispute FAILED: only the liquidator can receive payment. This method will revert if rewards have already been dispersed.\",\"params\":{\"liquidationId\":\"uniquely identifies the sponsor's liquidation.\",\"sponsor\":\"address of the sponsor associated with the liquidation.\"},\"returns\":{\"_0\":\"data about rewards paid out.\"}},\"withdrawPassedRequest()\":{\"details\":\"Might not withdraw the full requested amount in order to account for precision loss or if the full requested amount exceeds the collateral in the position (due to paying fees).\",\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}}},\"title\":\"Expiring Multi Party.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelTransferPosition()\":{\"notice\":\"Cancels a pending transfer position request.\"},\"cancelWithdrawal()\":{\"notice\":\"Cancels a pending withdrawal request.\"},\"constructor\":\"Constructs the ExpiringMultiParty contract.\",\"create((uint256),(uint256))\":{\"notice\":\"Creates tokens by creating a new position or by augmenting an existing position. Pulls `collateralAmount` into the sponsor's position and mints `numTokens` of `tokenCurrency`.\"},\"createLiquidation(address,(uint256),(uint256),(uint256),uint256)\":{\"notice\":\"Liquidates the sponsor's position if the caller has enough synthetic tokens to retire the position's outstanding tokens. Liquidations above a minimum size also reset an ongoing \\\"slow withdrawal\\\"'s liveness.\"},\"deposit((uint256))\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` into the caller's position.\"},\"depositTo(address,(uint256))\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` into the specified sponsor's position.\"},\"dispute(uint256,address)\":{\"notice\":\"Disputes a liquidation, if the caller has enough collateral to post a dispute bond and pay a fixed final fee charged on each price request.\"},\"emergencyShutdown()\":{\"notice\":\"Premature contract settlement under emergency circumstances.\"},\"emergencyUpdateDAOAddress(address)\":{\"notice\":\"Update DAO address under emergency circumstances\"},\"expire()\":{\"notice\":\"Locks contract state in expired and requests oracle price.\"},\"getCollateral(address)\":{\"notice\":\"Accessor method for a sponsor's collateral.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"getLiquidations(address)\":{\"notice\":\"Gets all liquidation information for a given sponsor address.\"},\"getOutstandingRegularFees(uint256)\":{\"notice\":\"Fetch any regular fees that the contract has pending but has not yet paid. If the fees to be paid are more than the total collateral within the contract then the totalPaid returned is full contract collateral amount.\"},\"gulp()\":{\"notice\":\"Removes excess collateral balance not counted in the PfC by distributing it out pro-rata to all sponsors.\"},\"payRegularFees()\":{\"notice\":\"Pays UMA DVM regular fees (as a % of the collateral pool) to the Store contract.\"},\"pfc()\":{\"notice\":\"Gets the current profit from corruption for this contract in terms of the collateral currency.\"},\"redeem((uint256))\":{\"notice\":\"Burns `numTokens` of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`.\"},\"remargin()\":{\"notice\":\"Theoretically supposed to pay fees and move money between margin accounts to make sure they reflect the NAV of the contract. However, this functionality doesn't apply to this contract.\"},\"repay((uint256))\":{\"notice\":\"Burns `numTokens` of `tokenCurrency` to decrease sponsors position size, without sending back `collateralCurrency`. This is done by a sponsor to increase position CR. Resulting size is bounded by minSponsorTokens.\"},\"requestTransferPosition()\":{\"notice\":\"Requests to transfer ownership of the caller's current position to a new sponsor address. Once the request liveness is passed, the sponsor can execute the transfer and specify the new sponsor.\"},\"requestWithdrawal((uint256))\":{\"notice\":\"Starts a withdrawal request that, if passed, allows the sponsor to withdraw` from their position.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"},\"settleExpired()\":{\"notice\":\"After a contract has passed expiry all token holders can redeem their tokens for underlying at the prevailing price defined by the DVM from the `expire` function.\"},\"totalPositionCollateral()\":{\"notice\":\"Accessor method for the total collateral stored within the PricelessPositionManager.\"},\"transferPositionPassedRequest(address)\":{\"notice\":\"After a passed transfer position request (i.e., by a call to `requestTransferPosition` and waiting `withdrawalLiveness`), transfers ownership of the caller's current position to `newSponsorAddress`.\"},\"transformCollateralRequirement((uint256))\":{\"notice\":\"Accessor method to calculate a transformed collateral requirement using the finanical product library specified during contract deployment. If no library was provided then no modification to the collateral requirement is done.\"},\"transformPrice((uint256),uint256)\":{\"notice\":\"Accessor method to compute a transformed price using the finanicalProductLibrary specified at contract deployment. If no library was provided then no modification to the price is done.\"},\"transformPriceIdentifier(uint256)\":{\"notice\":\"Accessor method to compute a transformed price identifier using the finanicalProductLibrary specified at contract deployment. If no library was provided then no modification to the identifier is done.\"},\"variableExpiration(uint256)\":{\"notice\":\"Variable contract expiration under pre-defined circumstances.\"},\"withdraw((uint256))\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` from the sponsor's position to the sponsor.\"},\"withdrawLiquidation(uint256,address)\":{\"notice\":\"After a dispute has settled or after a non-disputed liquidation has expired, anyone can call this method to disperse payments to the sponsor, liquidator, and disdputer.\"},\"withdrawPassedRequest()\":{\"notice\":\"After a passed withdrawal request (i.e., by a call to `requestWithdrawal` and waiting `withdrawalLiveness`), withdraws `positionData.withdrawalRequestAmount` of collateral currency.\"}},\"notice\":\"Convenient wrapper for Liquidatable.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/meir/Desktop/prelaunch/variable-expiring-multiparty/contracts/ExpiringMultiParty.sol\":\"ExpiringMultiParty\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/meir/Desktop/prelaunch/variable-expiring-multiparty/contracts/ExpiringMultiParty.sol\":{\"keccak256\":\"0xf9fd27942f1272d4f96b357820aa7043a4d400cc280741514400cf63aaeb62a4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b8fa241dfc7dcc067bd2818add9edc2f030a476fa94f1521597065f1e7ee120e\",\"dweb:/ipfs/QmaSYaWQe4o6yXmeAkUeJr5TPjBMRKh3uU1AFyfpYN81MP\"]},\"/Users/meir/Desktop/prelaunch/variable-expiring-multiparty/contracts/Liquidatable.sol\":{\"keccak256\":\"0x4b45d5664657d111801006fa6ffc47f517ad8a800088c2007949f37d0deff93b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b95cf47e64c08eb1c1b994aaf712c31962a8ba05fa13e777a4a4480abb862f40\",\"dweb:/ipfs/QmfWg9SGjfAL32vVb7qmTJ2yxqCzcb5QJubE2ixS9Gk5WE\"]},\"/Users/meir/Desktop/prelaunch/variable-expiring-multiparty/contracts/PricelessPositionManager.sol\":{\"keccak256\":\"0x9fcabe5ccdb2daa854064f92fdfd0407d1117afa79270de23e407d79ef3c394f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8561692d067a1e97bc3ca1026b0347d03b48bc28fd44fbe12ae527088c76700c\",\"dweb:/ipfs/QmXaf6NjZ6UWedTniwtP6MxDv7YXdmefoPTmeTppJFBEDw\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0xfadc24a31d75d6b3f955190cffe13bbe6e24a274c12b2b60e8c4004131487ce8\",\"urls\":[\"bzz-raw://0ec35367d49b2ea45f556a439f836e208d2460faeb6e2341e9130d163128b619\",\"dweb:/ipfs/QmTwKCBdkVAarY5hteSdwQ1J4GpogZoxCZHrbieMQVzuQJ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa27d8d0bf389702f2b124fff3d86238b17ec0abd47d1401e81dc48a1509dbb9a\",\"urls\":[\"bzz-raw://899c25b79e783c1e4ccdd06928e332e2b37f3ecaa487f49ef68ef9fde6b18f82\",\"dweb:/ipfs/QmV3rZDWabetVSmZ2iviS5tajKzvR3AEwsicKZao4ptTg2\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0xab45bbd5979790b9f84b2f741fc5476d7196f5fd924704d38798540fa1b2e2f3\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://24affc9dbe1fa7c73ed6e1f46f8e1f9f46b83954d43d0bb2ef15ed80fe7e1fc2\",\"dweb:/ipfs/Qmbddhukgu2FdV1VKpACsuterX2kcq2X9jJs6usPqXLSqE\"]},\"@uma/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xe766fe78267c8f589f9510a6e258b69287ed455c18d6b3f393d8e9d96f2d71cf\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2e78bb200ecd01e863bfd57583941561f09993f902b83aa5d362387746578209\",\"dweb:/ipfs/QmNX2pLdH4p4HtJTKqSY4LwenRUPwJKa22ZSF2yc3cTMq4\"]},\"@uma/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0xd7c14c59b0f4325ccc5feea6cf9acf45eefb169cbf48ffd4a265a3267b815cfa\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b8b49c6c76f0458a196b11b0dc03f9bcc8f26851fdb51888b2a7cb9034a96493\",\"dweb:/ipfs/QmY4JDiPDcZbW8j3PWRd9YwRP28WdnSPGA1Yknj5gkWJWH\"]},\"@uma/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x4ce613d5032aefb04a64fd623c216a6f68a1b903a4a7aa72721323dc988a6c90\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6b557f3da4d90ec171cba84a2d85202c2327028a081552fe36440cdbbef6396d\",\"dweb:/ipfs/QmcLdrkekhH1VXN5jEuiqbkTzX7doz1KuVp6KQfCnyQ8C4\"]},\"@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0x7ecd92b537bb1776f65bc0414e732c97559d07e309bd41e666bc65f143f2d895\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d1794951b316e87eedfd212fc54abe0261fe9defd62aca71f9a36452c3092abd\",\"dweb:/ipfs/QmXz4w3nVxSc9VTtLUa5mSTsb2btvdhgB72UrVbEdiJoFy\"]},\"@uma/core/contracts/common/interfaces/IERC20Standard.sol\":{\"keccak256\":\"0x4a90683cde9db2e89161523ae1389066b66be396b95fc802035d77a3a8dc33eb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://505100b776f8f90842576af5a4e7b84e118c74c3db160e761bfd0c11827a5b58\",\"dweb:/ipfs/QmTvJnvJjx5Z417Qns1DV6yRoGm1Rg3oK1k91JFXXrmvua\"]},\"@uma/core/contracts/financial-templates/common/FeePayer.sol\":{\"keccak256\":\"0x27b97b55a26f3bb6cc7c3ffab2ac287bede1170aee7c1cc80fdd57bdfc059799\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eea3cd53ef1999bff561fdce50790cf411044e62a6f875e043754727868649ae\",\"dweb:/ipfs/QmfWNdEK9aFdxFrP32f9mNgVmikMX6RnFYrewXfiXbL69i\"]},\"@uma/core/contracts/financial-templates/common/financial-product-libraries/FinancialProductLibrary.sol\":{\"keccak256\":\"0xc2eed8415699d6bb8866ce3ed3e8e4249d2a9640270a382b6f8d3e962c26c9b7\",\"urls\":[\"bzz-raw://3a71c9b2b4faf9de892c337abe84b1b4d3c7b82f8291a2015e16b0f016f07f62\",\"dweb:/ipfs/QmRxVHSZ3yRRad9xpBJ95qyE71EcZNh7y4WmGnUafpyZQj\"]},\"@uma/core/contracts/oracle/implementation/Constants.sol\":{\"keccak256\":\"0xdbb681274d3d1582bdeea2d5e09739d0f30fd37bafdfa37ac17b01dd05e1b12c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e07d0801e26cc117bb89113125faf54c730137a18b3dd3e7237a0422972c203b\",\"dweb:/ipfs/QmQntQCNR1hYPqUq3cKasTPV7BsCC8Xm3gJ4YfZKpZsNGh\"]},\"@uma/core/contracts/oracle/interfaces/AdministrateeInterface.sol\":{\"keccak256\":\"0x7d8ea8237206ab15d984ab08a9af9facefd46799a053b94a8937dfe88b66a044\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e6f456171b754253b66558d35597377631658b1a8c72189f854b7111567a3d33\",\"dweb:/ipfs/QmW7yfuXjUMp8TfKFYP62uscJJHqt9g42Ff1FthivQACoJ\"]},\"@uma/core/contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x22ad0329b3a6e55e30fb8391aa69310966cdbc06047ea7d031a2d14450a54d2f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5341487810effd6dddd567cd0bf8cd67e369ac69740bd1113ce197fa42bf1a90\",\"dweb:/ipfs/QmYoXoAFTkUdxmoU6AAdHFMpKQtgGi9xaUrQrBR1h7Q7ZR\"]},\"@uma/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0xfd0481f8e756e8e0f5694ecd7e6d32ef33bf17ab06158d57c69cfccee9717561\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://425d8849f8d2876f30663f77690cd202b8068f83ae02d5587466e2bce9b8a717\",\"dweb:/ipfs/QmTMNyDnP9n4ndkjiwtGD2AQj6EjA4iDzwwsj9qgVrgbXy\"]},\"@uma/core/contracts/oracle/interfaces/OptimisticOracleInterface.sol\":{\"keccak256\":\"0x479a8f911d10d1427c875a717c5cfaf8f21a7af2640fc8a76b17ca2d4df4b5e1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dbe6a0287c2ec980ec213973b3c357107528c4fb0d1d34a3f4146d34ca6bea2b\",\"dweb:/ipfs/QmUUWvU6UXVxf5yuTCuwEH8TY9wgKcDSrSjBYnQyfDVYcu\"]},\"@uma/core/contracts/oracle/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x426df5f5518159e244ceec654dfcb8cff93e748870eb7c59649881ff492669b5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fa1bdef93a101531c379fc08b0e353d16024aa9abc22e7c2873e8652199a40dd\",\"dweb:/ipfs/QmRCp9DVdUkAkwzWXwkpa1QgrBH48KqjmF3qXCd9tmsXxB\"]},\"@uma/core/contracts/oracle/interfaces/StoreInterface.sol\":{\"keccak256\":\"0x94ceb4286b9e214c3393f9995610eddec86aec3d9ec38814771363a40e783a03\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://da576e60ac5aa79d75bbd6c22aa19173822383136d391a7d22be8af49e3843a4\",\"dweb:/ipfs/QmPQ7pbkduyUkkQ4kJuVx3as6gHKxroG7NrwNtdbsPe2S7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "219:518:0:-:0;;;546:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;627:6;8588::3;:26;;;8628:6;:25;;;8667:6;:24;;;8705:6;:19;;;8738:6;:20;;;8772:6;:26;;;8812:6;:23;;;8849:6;:19;;;8882:6;:37;;;8933:6;:43;;;9626:18:4;9646:14;9662:13;3683::22;758::18;743:12;;:28;;;;;;;;;;;;;;;;;;689:89;919:4:16;905:11;;:18;;;;;;;;;;;;;;;;;;3736::22::1;3708;;:47;;;;;;;;;;;;;;;;;;3790:14;3765:6;;:40;;;;;;;;;;;;;;;;;;3833:16;:14;;;:16;;:::i;:::-;3815:15;:34;;;;3885:30;3913:1;3885:27;;;;;:30;;:::i;:::-;3859:23;:56;;;;;;;;;;;3550:372:::0;;;1339:19:16::1;:17;;;:19;;:::i;:::-;1368:17;:15;;;:17;;:::i;:::-;9733:16:4::2;:14;;;:16;;:::i;:::-;9710:20;:39;9702:48;;;::::0;::::2;;9768:25;:23;;;:25;;:::i;:::-;:47;;;9816:16;9768:65;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9760:74;;;::::0;::::2;;9867:20;9845:19;:42;;;;9918:19;9897:18;:40;;;;9978:13;9947;;:45;;;;;;;;;;;;;;;;;;10021:17;10002:16;:36;;;;;;;;;;;10066:16;10048:15;:34;;;;10131:37;10092:36;;:76;;;;;;;;;;;;;;;;;;10304:31;10254:23;;:82;;;;;;;;;;;;;;;;;;1406:20:16::1;:18;;;:20;;:::i;:::-;9195:1148:4::0;;;;;;;;;;1339:19:16::1;:17;;;:19;;:::i;:::-;1368:17;:15;;;:17;;:::i;:::-;9032:45:3::2;9075:1;9032:6;:28;;;:42;;;;;;:45;;;;:::i;:::-;9024:54;;;::::0;::::2;;9096:95;9189:1;9096:81;9138:6;:38;;;9096:6;:37;;;:41;;;;;;:81;;;;:::i;:::-;:92;;;;;;:95;;;;:::i;:::-;9088:104;;;::::0;::::2;;9273:6;:26;;;9251:19;:48;;;;9333:6;:28;;;9309:21;:52;;;;;;;;;;;9395:6;:28;;;9371:21;:52;;;;;;;;;;;9466:6;:37;;;9433:30;:70;;;;;;;;;;;9547:6;:38;;;9513:31;:72;;;;;;;;;;;1406:20:16::1;:18;;;:20;;:::i;:::-;8482:1110:3::0;546:189:0;219:518;;1472:256:18;1519:7;1566:3;1542:28;;:12;;;;;;;;;;:28;;;1538:184;;1599:12;;;;;;;;;;1593:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1586:43;;;;1538:184;1667:3;1660:10;;1472:256;;:::o;1032:135:15:-;1092:15;;:::i;:::-;1126:34;;;;;;;;1135:24;607:6;1135:1;:5;;;;;;:24;;;;:::i;:::-;1126:34;;;1119:41;;1032:135;;;:::o;2158:186:16:-;2290:11;;;;;;;;;;;2282:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2158:186::o;2350:136::-;2474:5;2460:11;;:19;;;;;;;;;;;;;;;;;;2350:136::o;42035:211:4:-;42093:28;42169:6;;;;;;;;;;;:31;;;42201:36;42169:69;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;42133:106;;42035:211;:::o;2492:206:16:-;2687:4;2673:11;;:18;;;;;;;;;;;;;;;;;;2492:206::o;2248:147:15:-;2324:4;2360:19;2377:1;2360:16;;;:19;;:::i;:::-;:28;;;2347:1;:10;;;:41;2340:48;;2248:147;;;;:::o;6433:151::-;6507:15;;:::i;:::-;6541:36;;;;;;;;6550:26;6565:1;:10;;;6550:1;:10;;;:14;;;;;;:26;;;;:::i;:::-;6541:36;;;6534:43;;6433:151;;;;:::o;4184:144::-;4257:4;4293:19;4310:1;4293:16;;;:19;;:::i;:::-;:28;;;4280:1;:10;;;:41;4273:48;;4184:144;;;;:::o;2119:459:7:-;2177:7;2423:1;2418;:6;2414:45;;;2447:1;2440:8;;;;2414:45;2469:9;2485:1;2481;:5;2469:17;;2513:1;2508;2504;:5;;;;;;:10;2496:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2570:1;2563:8;;;2119:459;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;219:518:0:-;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;:::i;:::-;68:71;;;;:::o;146:128::-;;227:6;221:13;212:22;;239:30;263:5;239:30;:::i;:::-;206:68;;;;:::o;281:134::-;;365:6;359:13;350:22;;377:33;404:5;377:33;:::i;:::-;344:71;;;;:::o;466:2937::-;;600:6;588:9;583:3;579:19;575:32;572:2;;;620:1;617;610:12;572:2;638:22;653:6;638:22;:::i;:::-;629:31;;725:1;757:60;813:3;804:6;793:9;789:22;757:60;:::i;:::-;750:4;743:5;739:16;732:86;670:159;893:2;926:60;982:3;973:6;962:9;958:22;926:60;:::i;:::-;919:4;912:5;908:16;901:86;839:159;1061:2;1094:60;1150:3;1141:6;1130:9;1126:22;1094:60;:::i;:::-;1087:4;1080:5;1076:16;1069:86;1008:158;1224:2;1257:60;1313:3;1304:6;1293:9;1289:22;1257:60;:::i;:::-;1250:4;1243:5;1239:16;1232:86;1176:153;1388:3;1422:60;1478:3;1469:6;1458:9;1454:22;1422:60;:::i;:::-;1415:4;1408:5;1404:16;1397:86;1339:155;1552:3;1586:60;1642:3;1633:6;1622:9;1618:22;1586:60;:::i;:::-;1579:4;1572:5;1568:16;1561:86;1504:154;1734:3;1768:60;1824:3;1815:6;1804:9;1800:22;1768:60;:::i;:::-;1761:4;1754:5;1750:16;1743:86;1668:172;1922:3;1956:60;2012:3;2003:6;1992:9;1988:22;1956:60;:::i;:::-;1949:4;1942:5;1938:16;1931:86;1850:178;2093:3;2129:60;2185:3;2176:6;2165:9;2161:22;2129:60;:::i;:::-;2120:6;2113:5;2109:18;2102:88;2038:163;2263:3;2299:86;2381:3;2372:6;2361:9;2357:22;2299:86;:::i;:::-;2290:6;2283:5;2279:18;2272:114;2211:186;2462:3;2498:60;2554:3;2545:6;2534:9;2530:22;2498:60;:::i;:::-;2489:6;2482:5;2478:18;2471:88;2407:163;2637:3;2673:86;2755:3;2746:6;2735:9;2731:22;2673:86;:::i;:::-;2664:6;2657:5;2653:18;2646:114;2580:191;2838:3;2874:86;2956:3;2947:6;2936:9;2932:22;2874:86;:::i;:::-;2865:6;2858:5;2854:18;2847:114;2781:191;3048:3;3084:86;3166:3;3157:6;3146:9;3142:22;3084:86;:::i;:::-;3075:6;3068:5;3064:18;3057:114;2982:200;3259:3;3295:86;3377:3;3368:6;3357:9;3353:22;3295:86;:::i;:::-;3286:6;3279:5;3275:18;3268:114;3192:201;566:2837;;;;:::o;3443:350::-;;3569:4;3557:9;3552:3;3548:19;3544:30;3541:2;;;3587:1;3584;3577:12;3541:2;3605:20;3620:4;3605:20;:::i;:::-;3596:29;;3679:1;3711:60;3767:3;3758:6;3747:9;3743:22;3711:60;:::i;:::-;3704:4;3697:5;3693:16;3686:86;3635:148;3535:258;;;;:::o;3800:134::-;;3884:6;3878:13;3869:22;;3896:33;3923:5;3896:33;:::i;:::-;3863:71;;;;:::o;3941:263::-;;4056:2;4044:9;4035:7;4031:23;4027:32;4024:2;;;4072:1;4069;4062:12;4024:2;4107:1;4124:64;4180:7;4171:6;4160:9;4156:22;4124:64;:::i;:::-;4114:74;;4086:108;4018:186;;;;:::o;4211:257::-;;4323:2;4311:9;4302:7;4298:23;4294:32;4291:2;;;4339:1;4336;4329:12;4291:2;4374:1;4391:61;4444:7;4435:6;4424:9;4420:22;4391:61;:::i;:::-;4381:71;;4353:105;4285:183;;;;:::o;4475:332::-;;4624:3;4612:9;4603:7;4599:23;4595:33;4592:2;;;4641:1;4638;4631:12;4592:2;4676:1;4693:98;4783:7;4774:6;4763:9;4759:22;4693:98;:::i;:::-;4683:108;;4655:142;4586:221;;;;:::o;4814:263::-;;4929:2;4917:9;4908:7;4904:23;4900:32;4897:2;;;4945:1;4942;4935:12;4897:2;4980:1;4997:64;5053:7;5044:6;5033:9;5029:22;4997:64;:::i;:::-;4987:74;;4959:108;4891:186;;;;:::o;5084:113::-;5167:24;5185:5;5167:24;:::i;:::-;5162:3;5155:37;5149:48;;:::o;5205:327::-;;5365:67;5429:2;5424:3;5365:67;:::i;:::-;5358:74;;5465:29;5461:1;5456:3;5452:11;5445:50;5523:2;5518:3;5514:12;5507:19;;5351:181;;;:::o;5541:370::-;;5701:67;5765:2;5760:3;5701:67;:::i;:::-;5694:74;;5801:34;5797:1;5792:3;5788:11;5781:55;5870:3;5865:2;5860:3;5856:12;5849:25;5902:2;5897:3;5893:12;5886:19;;5687:224;;;:::o;5920:331::-;;6080:67;6144:2;6139:3;6080:67;:::i;:::-;6073:74;;6180:33;6176:1;6171:3;6167:11;6160:54;6242:2;6237:3;6233:12;6226:19;;6066:185;;;:::o;6259:222::-;;6386:2;6375:9;6371:18;6363:26;;6400:71;6468:1;6457:9;6453:17;6444:6;6400:71;:::i;:::-;6357:124;;;;:::o;6488:416::-;;6688:2;6677:9;6673:18;6665:26;;6738:9;6732:4;6728:20;6724:1;6713:9;6709:17;6702:47;6763:131;6889:4;6763:131;:::i;:::-;6755:139;;6659:245;;;:::o;6911:416::-;;7111:2;7100:9;7096:18;7088:26;;7161:9;7155:4;7151:20;7147:1;7136:9;7132:17;7125:47;7186:131;7312:4;7186:131;:::i;:::-;7178:139;;7082:245;;;:::o;7334:416::-;;7534:2;7523:9;7519:18;7511:26;;7584:9;7578:4;7574:20;7570:1;7559:9;7555:17;7548:47;7609:131;7735:4;7609:131;:::i;:::-;7601:139;;7505:245;;;:::o;7757:256::-;;7819:2;7813:9;7803:19;;7857:4;7849:6;7845:17;7956:6;7944:10;7941:22;7920:18;7908:10;7905:34;7902:62;7899:2;;;7977:1;7974;7967:12;7899:2;7997:10;7993:2;7986:22;7797:216;;;;:::o;8021:163::-;;8136:6;8131:3;8124:19;8173:4;8168:3;8164:14;8149:29;;8117:67;;;;:::o;8192:91::-;;8254:24;8272:5;8254:24;:::i;:::-;8243:35;;8237:46;;;:::o;8290:85::-;;8363:5;8356:13;8349:21;8338:32;;8332:43;;;:::o;8382:72::-;;8444:5;8433:16;;8427:27;;;:::o;8461:121::-;;8534:42;8527:5;8523:54;8512:65;;8506:76;;;:::o;8589:72::-;;8651:5;8640:16;;8634:27;;;:::o;8668:117::-;8737:24;8755:5;8737:24;:::i;:::-;8730:5;8727:35;8717:2;;8776:1;8773;8766:12;8717:2;8711:74;:::o;8792:111::-;8858:21;8873:5;8858:21;:::i;:::-;8851:5;8848:32;8838:2;;8894:1;8891;8884:12;8838:2;8832:71;:::o;8910:117::-;8979:24;8997:5;8979:24;:::i;:::-;8972:5;8969:35;8959:2;;9018:1;9015;9008:12;8959:2;8953:74;:::o;9034:117::-;9103:24;9121:5;9103:24;:::i;:::-;9096:5;9093:35;9083:2;;9142:1;9139;9132:12;9083:2;9077:74;:::o;219:518:0:-;;;;;;;",
  "deployedSourceMap": "219:518:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32335:454:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6433:57:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3158:49:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1221:32:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37852:242:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13779:709;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;27090:240:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;397:27:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3860:30:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20184:444;;;:::i;:::-;;1112:115:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11068:6682:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1472:256:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5851:34:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6226:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18603:1506:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34671:678;;;:::i;:::-;;20816:5303:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10792:626:4;;;:::i;:::-;;4831:1266:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15637:1225:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37147:223;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5989:48:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;51619:270:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5131:57:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5235:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2926:49:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;11852:981;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23659:1076;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25371:1961;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38539:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21336:1773;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3528:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31714:352;;;:::i;:::-;;6650:58:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8939:124:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1858:34:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4529:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4873:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9480:64:22;;;:::i;:::-;;3622:30:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33132:898;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;36457:299;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6764:1704:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3771:34:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4432:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26372:207:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18520:1642;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12915:392:4;;;:::i;:::-;;1335:29:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17186:921:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35813:96;;;:::i;:::-;;14889:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1999:50:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4624:38:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28035:3345;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32335:454;32429:36;:34;:36::i;:::-;32415:50;;:10;:50;;;:104;;;;32483:36;;;;;;;;;;;32469:50;;:10;:50;;;32415:104;32407:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;32605:16;:14;:16::i;:::-;32587:15;:34;;;;32695:10;32631:92;;32657:36;;;;;;;;;;;32631:92;;;32707:15;;32631:92;;;;;;:::i;:::-;;;;;;;;32772:10;32733:36;;:49;;;;;;;;;;;;;;;;;;32335:454;:::o;6433:57:3:-;;;;;;;;;:::o;3158:49:4:-;;;;;;;;;:::o;1221:32:22:-;;;;;;;;;;;;;:::o;37852:242:4:-;38003:26;;:::i;:::-;1625:19:16;:17;:19::i;:::-;38052:35:4::1;38068:5;38075:11;38052:15;:35::i;:::-;38045:42;;37852:242:::0;;;;:::o;13779:709::-;7046:20;:18;:20::i;:::-;13931:7:::1;7595:40;7627:7;7595:31;:40::i;:::-;3054:16:22::2;:14;:16::i;:::-;;1339:19:16::3;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;14000:33:4::4;14031:1;14000:16;:30;;:33;;;;:::i;:::-;13992:42;;;::::0;::::4;;14044:33;14080:25;14097:7;14080:16;:25::i;:::-;14044:61;;14201:60;14230:12;14244:16;14201:28;:60::i;:::-;;14294:16;:25;;;14285:7;14277:43;;;;;;;;;;;;14392:89;14428:10;14448:4;14455:16;:25;;;14392:18;;;;;;;;;;;:35;;;;:89;;;;;;:::i;:::-;1395:1:16;1406:20:::3;:18;:20::i;:::-;7076:1:4::1;13779:709:::0;;:::o;27090:240:3:-;27236:26;;:::i;:::-;1625:19:16;:17;:19::i;:::-;27285:38:3::1;27317:5;27285:31;:38::i;:::-;27278:45;;27090:240:::0;;;:::o;397:27:18:-;;;;;;;;;;;;:::o;3860:30:4:-;;;;:::o;20184:444::-;1339:19:16;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;20246:33:4::1;20282:28;20299:10;20282:16;:28::i;:::-;20246:64;;20375:1;20328:12;:43;;;:48;;20320:57;;;::::0;::::1;;20431:12;:36;;:45;;;20419:10;20393:84;;;;;;;;;;;;20584:37;20608:12;20584:23;:37::i;:::-;1395:1:16;1406:20:::0;:18;:20::i;:::-;20184:444:4:o;1112:115:18:-;914:3;890:28;;:12;;;;;;;;;;:28;;;;882:37;;;;;;1186:12:::1;::::0;::::1;;;;;;;;1180:34;;;1215:4;1180:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1112:115:::0;:::o;11068:6682:3:-;11444:21;11479:43;;:::i;:::-;11536:39;;:::i;:::-;3054:16:22;:14;:16::i;:::-;;7046:20:4::1;:18;:20::i;:::-;1339:19:16::2;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;11691:8:3::3;11671:16;:14;:16::i;:::-;:28;;11663:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;11781:40;11824:25;11841:7;11824:16;:25::i;:::-;11781:68;;11879:75;11894:20;11879:75;;;;;;;;;;:::i;:::-;11916:19;:37;;11879:75;;;;;;;;;;;;;;;::::0;::::3;:14;:75::i;:::-;11860:94;;11972:33;12003:1;11972:16;:30;;:33;;;;:::i;:::-;11964:42;;;::::0;::::3;;12234;;:::i;:::-;12279:60;12305:19;:33;;12279:60;;;;;;;;;;;;;;;::::0;::::3;:25;:60::i;:::-;12234:105;;12349:57;;:::i;:::-;12409:30;12437:1;12409:27;:30::i;:::-;12349:90;;12453:78;12515:15;12453:19;:43;;:61;;;;;;;;;;;;;;;::::0;::::3;;;:78;;;;:::i;:::-;12449:206;;;12580:64;12600:19;:43;;12580:64;;;;;;;;;;;;;;;::::0;::::3;:15;:19;;:64;;;;:::i;:::-;12547:97;;12449:206;12736:38;;:::i;:::-;12777:19;:37;;12736:78;;;;;;;;;;;;;;;::::0;::::3;;;13058:91;13118:30;13058:38;13084:11;13058:21;:25;;;;;;;;;;:::i;:::-;;;:38;;;;:::i;:::-;:59;;:91;;;;:::i;:::-;13033:180;;;;;;;;;;;;:::i;:::-;;;;;;;;;13338:88;13395:30;13338:38;13364:11;13338:21;:25;;;;;;;;;;:::i;:::-;;;:38;;;;:::i;:::-;:56;;:88;;;;:::i;:::-;13313:177;;;;;;;;;;;;:::i;:::-;;;;;;;;;1395:1:16;13579:19:3;:17;:19::i;:::-;13564:34;;13668:43;;:::i;:::-;13721:47;;:::i;:::-;13850:32;;:::i;:::-;13885:59;13906:19;:37;;13885:59;;;;;;;;;;;;;;;::::0;::::3;:16;:20;;:59;;;;:::i;:::-;13850:94;;14061:26;14081:5;14061:15;:19;;:26;;;;:::i;:::-;14042:45;;14282:41;14317:5;14282:30;:34;;:41;;;;:::i;:::-;14259:64;;14493:51;;:::i;:::-;14563:54;14611:5;14563:19;:43;;:47;;;;;;;;;;;;;;;::::0;::::3;;;:54;;;;:::i;:::-;14493:124;;14631:93;14654:7;14663:16;14681;14699:24;14631:22;:93::i;:::-;1395:1:16;;14804:76:3;14819:24;14845:34;14866:12;14845:16;:20;;:34;;;;:::i;:::-;14804:14;:76::i;:::-;;15187:12;:21;15200:7;15187:21;;;;;;;;;;;;;;;:28;;;;15171:44;;15225:12;:21;15238:7;15225:21;;;;;;;;;;;;;;;15265:599;;;;;;;;15308:7;15265:599;;;;;;15345:10;15265:599;;;;;;15380:18;15265:599;;;;;;;;;;;;15433:16;:14;:16::i;:::-;15265:599;;;;15486:16;15265:599;;;;15538:16;15265:599;;;;15594:20;15265:599;;;;15651:55;15675:30;15703:1;15675:27;:30::i;:::-;15651:23;:55::i;:::-;15265:599;;;;15742:1;15265:599;;;;;;15779:30;15807:1;15779:27;:30::i;:::-;15265:599;;;;15837:12;15265:599;;::::0;15225:649:::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16576:44;;:::i;:::-;16623:16;16576:63;;;;;;;;;;;;;;;::::0;::::3;;;16719:1;16666:19;:50;;;:54;:188;;;;;16838:16;:14;:16::i;:::-;16785:19;:50;;;:69;16666:188;:304;;;;;16914:56;16952:17;16914:16;:37;;:56;;;;:::i;:::-;16666:304;16649:513;;;17111:40;17132:18;;17111:16;:14;:16::i;:::-;:20;;:40;;;;:::i;:::-;17058:19;:50;;:93;;;;16649:513;17254:13;17230:10;17177:251;;17209:7;17177:251;;;17281:16;:25;;;17320:16;:25;;;17359:20;:29;;;17402:16;:14;:16::i;:::-;17177:251;;;;;;;;;:::i;:::-;;;;;;;;17465:84;17496:10;17516:4;17523:16;:25;;;17465:13;;;;;;;;;;;:30;;;;:84;;;;;;:::i;:::-;17559:13;;;;;;;;;;;:18;;;17578:16;:25;;;17559:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;17658:85;17694:10;17714:4;17721:12;:21;;;17658:18;;;;;;;;;;;:35;;;;:85;;;;;;:::i;:::-;1395:1:16;;;;;;1406:20:::2;:18;:20::i;:::-;11068:6682:3::0;;;;;;;;;:::o;1472:256:18:-;1519:7;1566:3;1542:28;;:12;;;;;;;;;;:28;;;1538:184;;1599:12;;;;;;;;;;1593:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1586:43;;;;1538:184;1667:3;1660:10;;1472:256;;:::o;5851:34:3:-;;;;:::o;6226:48::-;;;;;;;;;:::o;18603:1506:4:-;18736:42;;:::i;:::-;7046:20;:18;:20::i;:::-;3054:16:22::1;:14;:16::i;:::-;;1339:19:16::2;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;18794:33:4::3;18830:28;18847:10;18830:16;:28::i;:::-;18794:64;;18936:1;18889:12;:43;;;:48;;:131;;;;;19004:16;:14;:16::i;:::-;18957:12;:43;;;:63;;18889:131;18868:162;;;::::0;::::3;;19254:43;;:::i;:::-;19300:12;:36;;19254:82;;;;;;;;;;;;;;;::::0;::::3;;;19350:105;19401:53;19427:12;:26;;19401:53;;;;;;;;;;;;;;;::::0;::::3;:25;:53::i;:::-;19350:12;:36;;:50;;;;;;;;;;;;;;;::::0;::::3;;;:105;;;;:::i;:::-;19346:208;;;19490:53;19516:12;:26;;19490:53;;;;;;;;;;;;;;;::::0;::::3;:25;:53::i;:::-;19471:72;;19346:208;19659:60;19688:12;19702:16;19659:28;:60::i;:::-;19641:78;;19826:37;19850:12;19826:23;:37::i;:::-;19954:69;19986:10;19998:15;:24;;;19954:18;;;;;;;;;;;:31;;;;:69;;;;;:::i;:::-;20077:15;:24;;;20065:10;20039:63;;;;;;;;;;;;1395:1:16;;1406:20:::2;:18;:20::i;:::-;18603:1506:4::0;:::o;34671:678::-;7046:20;:18;:20::i;:::-;7499:16:::1;:14;:16::i;:::-;1339:19:16::2;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;34801:36:4::3;:34;:36::i;:::-;34787:50;;:10;:50;;;34779:59;;;::::0;::::3;;34865:35;34849:13;;:51;;;;;;;;;;;;;;;;;;;;;;;;35092:30;35125:19;;35092:52;;35176:16;:14;:16::i;:::-;35154:19;:38;;;;35202:50;35232:19;;35202:29;:50::i;:::-;35286:10;35268:74;;;35298:22;35322:19;;35268:74;;;;;;;:::i;:::-;;;;;;;;1395:1:16;1406:20:::2;:18;:20::i;:::-;34671:678:4:o:0;20816:5303:3:-;21000:18;;:::i;:::-;20921:13;20936:7;8150:37;8164:13;8179:7;8150:13;:37::i;:::-;3054:16:22::1;:14;:16::i;:::-;;1339:19:16::2;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;21034:35:3::3;21072:43;21092:7;21101:13;21072:19;:43::i;:::-;21034:81;;21232:31;21240:13;21255:7;21232;:31::i;:::-;21444:41;;:::i;:::-;21488:56;21514:11;:29;;21488:56;;;;;;;;;;;;;;;::::0;::::3;:25;:56::i;:::-;21444:100;;21554:42;;:::i;:::-;21599:11;:27;;21554:72;;;;;;;;;;;;;;;::::0;::::3;;;21636:47;;:::i;:::-;21698:70;21753:14;21698:50;21732:15;21698:11;:29;;:33;;;;;;;;;;;;;;;::::0;::::3;;;:50;;;;:::i;:::-;:54;;:70;;;;:::i;:::-;21636:132;;21778:37;;:::i;:::-;21818:48;21851:14;21818:11;:28;;:32;;;;;;;;;;;;;;;::::0;::::3;;;:48;;;;:::i;:::-;21778:88;;21876:48;;:::i;:::-;21927:57;21963:20;21927:31;:35;;;;;;;;;;;;;;;::::0;::::3;;;:57;;;;:::i;:::-;21876:108;;21994:47;;:::i;:::-;22044:56;22079:20;22044:30;:34;;;;;;;;;;;;;;;::::0;::::3;;;:56;;;;:::i;:::-;21994:106;;22110:44;;:::i;:::-;22157:37;22172:21;22157:37;;;;;;;;;;;;;;;::::0;::::3;:10;:14;;:37;;;;:::i;:::-;22110:84;;22204:35;;:::i;:::-;22242:40;22267:14;22242:11;:20;;:24;;;;;;;;;;;;;;;::::0;::::3;;;:40;;;;:::i;:::-;22204:78;;22752:26;;:::i;:::-;22813:23;22792:44;;;;;;;;:11;:17;;;;;;;;;;;;:44;;;;;;;;;22788:2865;;;23047:58;23096:8;23047:44;23073:17;23047:21;:25;;:44;;;;:::i;:::-;:48;;:58;;;;:::i;:::-;23023:7;:21;;:82;;;;23228:62;23253:36;23268:20;23253:10;:14;;:36;;;;:::i;:::-;23228:20;:24;;:62;;;;:::i;:::-;23205:7;:20;;:85;;;;23667:73;23718:21;23667:46;23692:20;23667;:24;;:46;;;;:::i;:::-;:50;;:73;;;;:::i;:::-;23641:7;:23;;:99;;;;23835:68;23853:24;23879:7;:23;;;23835:17;:68::i;:::-;23808:7;:24;;:95;;;;23941:65;23959:24;23985:7;:20;;;23941:17;:65::i;:::-;23917:7;:21;;:89;;;;24045:66;24063:24;24089:7;:21;;;24045:17;:66::i;:::-;24020:7;:22;;:91;;;;24126:86;24158:11;:20;;;;;;;;;;;;24180:7;:22;;;:31;;;24126:18;;;;;;;;;;;:31;;;;:86;;;;;:::i;:::-;24226:90;24258:11;:22;;;;;;;;;;;;24282:7;:24;;;:33;;;24226:18;;;;;;;;;;;:31;;;;:90;;;;;:::i;:::-;24330:84;24362:11;:19;;;;;;;;;;;;24383:7;:21;;;:30;;;24330:18;;;;;;;;;;;:31;;;;:84;;;;;:::i;:::-;22788:2865;;;24538:20;24517:41:::0;::::3;;;;;;;:11;:17;;;;;;;;;;;;:41;;;;;;;;;24513:1140;;;24678:47;24716:8;24678:33;24693:17;24678:10;:14;;:33;;;;:::i;:::-;:37;;:47;;;;:::i;:::-;24652:7;:23;;:73;;;;24820:68;24838:24;24864:7;:23;;;24820:17;:68::i;:::-;24793:7;:24;;:95;;;;24903:90;24935:11;:22;;;;;;;;;;;;24959:7;:24;;;:33;;;24903:18;;;;;;;;;;;:31;;;;:90;;;;;:::i;:::-;24513:1140;;;25227:18;25206:39;;;;;;;;:11;:17;;;;;;;;;;;;:39;;;;;;;;;25202:451;;;25350:24;25365:8;25350:10;:14;;:24;;;;:::i;:::-;25324:7;:23;;:50;;;;25469:68;25487:24;25513:7;:23;;;25469:17;:68::i;:::-;25442:7;:24;;:95;;;;25552:90;25584:11;:22;;;;;;;;;;;;25608:7;:24;;;:33;;;25552:18;;;;;;;;;;;:31;;;;:90;;;;;:::i;:::-;25202:451;24513:1140;22788:2865;25862:11;:17;;;;;;;;;;;;25668:259;;;;;;;;25702:10;25668:259;;;25726:7;:24;;;:33;;;25773:7;:22;;;:31;;;25818:7;:21;;;:30;;;25893:15;:24;;;25668:259;;;;;;;;;:::i;:::-;;;;;;;;26051:12;:21;26064:7;26051:21;;;;;;;;;;;;;;;26073:13;26051:36;;;;;;;;;;;;;;;;;;;26044:43:::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;::::0;::::3;;;;;;;;;;;::::0;::::3;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;::::0;::::3;;;;;;;;;26105:7;26098:14;;;;;;;;;;;;1406:20:16::2;:18;:20::i;:::-;20816:5303:3::0;;;;;;:::o;10792:626:4:-;7046:20;:18;:20::i;:::-;1339:19:16::1;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;10879:33:4::2;10915:28;10932:10;10915:16;:28::i;:::-;10879:64;;11014:1;10961:12;:49;;;:54;10953:63;;;::::0;::::2;;11108:23;11134:40;11155:18;;11134:16;:14;:16::i;:::-;:20;;:40;;;;:::i;:::-;11108:66;;11210:19;;11192:15;:37;11184:46;;;::::0;::::2;;11345:15;11293:12;:49;;:67;;;;11400:10;11376:35;;;;;;;;;;;;1395:1:16;;1406:20:::1;:18;:20::i;:::-;10792:626:4:o:0;4831:1266:22:-;4888:26;;:::i;:::-;1339:19:16;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;4926:12:22::1;4941:16;:14;:16::i;:::-;4926:31;;4967:41;;:::i;:::-;5011:6;:4;:6::i;:::-;4967:50;;5168:37;;:::i;:::-;5219:38;;:::i;:::-;5271:36;;:::i;:::-;5320:31;5346:4;5320:25;:31::i;:::-;5154:197;;;;;;5379:4;5361:15;:22;;;;5454:20;5472:1;5454:9;:17;;:20;;;;:::i;:::-;5450:67;;;5497:9;5490:16;;;;;;;;;5450:67;5569:11;:20;;;5548:10;:19;;;5532:58;;;;;;;;;;5601:57;5632:9;5643:14;5601:30;:57::i;:::-;5673:27;5698:1;5673:10;:24;;:27;;;;:::i;:::-;5669:262;;;5716:20;5739:11;:9;:11::i;:::-;5716:34;;5764:77;5813:5;5821:10;:19;;;5764:18;;;;;;;;;;;:40;;;;:77;;;;;:::i;:::-;5855:5;:24;;;5888:18;;;;;;;;;;;5909:10;5855:65;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5669:262;;5945:28;5971:1;5945:11;:25;;:28;;;;:::i;:::-;5941:124;;;5989:65;6021:10;6033:11;:20;;;5989:18;;;;;;;;;;;:31;;;;:65;;;;;:::i;:::-;5941:124;6081:9;6074:16;;;;;;;1395:1:16;1406:20:::0;:18;:20::i;:::-;4831:1266:22;:::o;15637:1225:4:-;15838:42;;:::i;:::-;7046:20;:18;:20::i;:::-;15771:10:::1;7595:40;7627:7;7595:31;:40::i;:::-;3054:16:22::2;:14;:16::i;:::-;;1339:19:16::3;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;15904:33:4::4;15935:1;15904:16;:30;;:33;;;;:::i;:::-;15896:42;;;::::0;::::4;;15948:33;15984:28;16001:10;15984:16;:28::i;:::-;15948:64;;16283:68;16320:12;16334:16;16283:36;:68::i;:::-;16265:86;;16390:15;:24;;;16378:10;16367:48;;;;;;;;;;;;16786:69;16818:10;16830:15;:24;;;16786:18;;;;;;;;;;;:31;;;;:69;;;;;:::i;:::-;1395:1:16;1406:20:::3;:18;:20::i;:::-;7076:1:4::1;15637:1225:::0;;;:::o;37147:223::-;37224:26;;:::i;:::-;1625:19:16;:17;:19::i;:::-;37269:94:4::1;37309:53;37335:26;37309:53;;;;;;;;;;;;;;;::::0;::::1;:25;:53::i;:::-;37269:39;:94::i;:::-;37262:101;;37147:223:::0;:::o;5989:48:3:-;;;;;;;;;:::o;51619:270:4:-;51699:14;51744:18;51729:43;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;51725:158;;51870:2;51863:9;;;;51725:158;51822:9;51815:16;;;51619:270;;;;:::o;5131:57:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5235:51::-;;;;;;;;;:::o;2926:49:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11852:981::-;7046:20;:18;:20::i;:::-;11989:10:::1;7595:40;7627:7;7595:31;:40::i;:::-;1339:19:16::2;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;12059:139:4::3;12154:30;12182:1;12154:27;:30::i;:::-;12059:69;12085:9;:28;12095:17;12085:28;;;;;;;;;;;;;;;:42;;12059:69;;;;;;;;;;;;;;;::::0;::::3;:25;:69::i;:::-;:77;;:139;;;;:::i;:::-;12038:170;;;::::0;::::3;;12218:33;12254:28;12271:10;12254:16;:28::i;:::-;12218:64;;12366:1;12313:12;:49;;;:54;;:143;;;;;12440:16;:14;:16::i;:::-;12387:12;:49;;;:69;;12313:143;12292:174;;;::::0;::::3;;12564:1;12512:12;:49;;:53;;;;12607:12;12576:9;:28;12586:17;12576:28;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12636:9;:21;12646:10;12636:21;;;;;;;;;;;;;;;;12629:28:::0;::::3;;;::::0;::::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;12717:17;12673:62;;12705:10;12673:62;;;;;;;;;;;;12761:17;12750:29;;;;;;;;;;;;12815:10;12794:32;;;;;;;;;;;;1395:1:16;1406:20:::2;:18;:20::i;:::-;7076:1:4::1;11852:981:::0;:::o;23659:1076::-;7046:20;:18;:20::i;:::-;23783:10:::1;7595:40;7627:7;7595:31;:40::i;:::-;3054:16:22::2;:14;:16::i;:::-;;1339:19:16::3;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;23847:33:4::4;23883:28;23900:10;23883:16;:28::i;:::-;23847:64;;23929:59;23957:12;:30;;23929:59;;;;;;;;;;;;;;;::::0;::::4;:9;:27;;:59;;;;:::i;:::-;23921:68;;;::::0;::::4;;24096:40;;:::i;:::-;24139:45;24174:9;24139:12;:30;;:34;;;;;;;;;;;;;;;::::0;::::4;;;:45;;;;:::i;:::-;24096:88;;24202:52;24237:16;24202:52;;;;;;;;;;;;;;;::::0;::::4;:13;:34;;:52;;;;:::i;:::-;24194:61;;;::::0;::::4;;24298:13;24265:12;:30;;:46;;;;;;;;;;;24410:37;24437:9;24410:22;:26;;;;;;;;;;;;;;;::::0;::::4;;;:37;;;;:::i;:::-;24385:22;:62;;;;;;;;;;;24501:13;:22;;;24481:9;:18;;;24469:10;24463:61;;;;;;;;;;;;24603:77;24634:10;24654:4;24661:9;:18;;;24603:13;;;;;;;;;;;:30;;;;:77;;;;;;:::i;:::-;24690:13;;;;;;;;;;;:18;;;24709:9;:18;;;24690:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;1395:1:16;;1406:20:::3;:18;:20::i;:::-;7076:1:4::1;23659:1076:::0;:::o;25371:1961::-;25535:42;;:::i;:::-;25468:10;7595:40;7627:7;7595:31;:40::i;:::-;3054:16:22::1;:14;:16::i;:::-;;1339:19:16::2;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;25593:33:4::3;25629:28;25646:10;25629:16;:28::i;:::-;25593:64;;25676:55;25700:12;:30;;25676:55;;;;;;;;;;;;;;;::::0;::::3;:9;:23;;:55;;;;:::i;:::-;25675:56;25667:65;;;::::0;::::3;;25743:43;;:::i;:::-;25789:45;25803:12;:30;;25789:45;;;;;;;;;;;;;;;::::0;::::3;:9;:13;;:45;;;;:::i;:::-;25743:91;;25844:45;;:::i;:::-;25904:75;25925:53;25951:12;:26;;25925:53;;;;;;;;;;;;;;;::::0;::::3;:25;:53::i;:::-;25904:16;:20;;:75;;;;:::i;:::-;25844:135;;26105:49;26144:9;26105:12;:30;;:38;;;;;;;;;;;;;;;::::0;::::3;;;:49;;;;:::i;:::-;26101:840;;;26188:34;26211:10;26188:22;:34::i;:::-;26170:52;;26101:840;;;26352:62;26381:12;26395:18;26352:28;:62::i;:::-;26334:80;;26529:40;;:::i;:::-;26572:45;26607:9;26572:12;:30;;:34;;;;;;;;;;;;;;;::::0;::::3;;;:45;;;;:::i;:::-;26529:88;;26639:52;26674:16;26639:52;;;;;;;;;;;;;;;::::0;::::3;:13;:34;;:52;;;;:::i;:::-;26631:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;26773:13;26740:12;:30;;:46;;;;;;;;;;;26893:37;26920:9;26893:22;:26;;;;;;;;;;;;;;;::::0;::::3;;;:37;;;;:::i;:::-;26868:22;:62;;;;;;;;;;;26101:840;;27001:9;:18;;;26975:15;:24;;;26963:10;26956:64;;;;;;;;;;;;27121:69;27153:10;27165:15;:24;;;27121:18;;;;;;;;;;;:31;;;;:69;;;;;:::i;:::-;27200:77;27231:10;27251:4;27258:9;:18;;;27200:13;;;;;;;;;;;:30;;;;:77;;;;;;:::i;:::-;27287:13;;;;;;;;;;;:18;;;27306:9;:18;;;27287:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;1395:1:16;;;1406:20:::2;:18;:20::i;:::-;25371:1961:4::0;;;;:::o;38539:166::-;38634:7;1625:19:16;:17;:19::i;:::-;38660:38:4::1;38686:11;38660:25;:38::i;:::-;38653:45;;38539:166:::0;;;:::o;21336:1773::-;7046:20;:18;:20::i;:::-;3054:16:22::1;:14;:16::i;:::-;;1339:19:16::2;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;21530:33:4::3;21566:9;:21;21576:10;21566:21;;;;;;;;;;;;;;;21530:57;;21719:193;21760:75;21818:16;21760:53;21786:12;:26;;21760:53;;;;;;;;;;;;;;;::::0;::::3;:25;:53::i;:::-;:57;;:75;;;;:::i;:::-;21853:45;21888:9;21853:12;:30;;:34;;;;;;;;;;;;;;;::::0;::::3;;;:45;;;;:::i;:::-;21719:23;:193::i;:::-;:249;;;;21916:52;21940:16;21958:9;21916:23;:52::i;:::-;21719:249;21697:321;;;;;;;;;;;;:::i;:::-;;;;;;;;;22084:1;22037:12;:43;;;:48;22029:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;22122:41;22161:1;22122:12;:30;;:38;;;;;;;;;;;;;;;::::0;::::3;;;:41;;;;:::i;:::-;22118:204;;;22187:48;22218:16;22187:48;;;;;;;;;;;;;;;::::0;::::3;:9;:30;;:48;;;;:::i;:::-;22179:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;22300:10;22289:22;;;;;;;;;;;;22118:204;22417:60;22446:12;22460:16;22417:28;:60::i;:::-;;22603:45;22638:9;22603:12;:30;;:34;;;;;;;;;;;;;;;::::0;::::3;;;:45;;;;:::i;:::-;22570:12;:30;;:78;;;;;;;;;;;22684:37;22711:9;22684:22;:26;;;;;;;;;;;;;;;::::0;::::3;;;:37;;;;:::i;:::-;22659:22;:62;;;;;;;;;;;22792:9;:18;;;22765:16;:25;;;22753:10;22737:74;;;;;;;;;;;;22944:89;22980:10;23000:4;23007:16;:25;;;22944:18;;;;;;;;;;;:35;;;;:89;;;;;;:::i;:::-;23051:13;;;;;;;;;;;:18;;;23070:10;23082:9;:18;;;23051:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23043:59;;;::::0;::::3;;1395:1:16;1406:20:::2;:18;:20::i;:::-;21336:1773:4::0;;:::o;3528:35::-;;;;;;;;;;;;;:::o;31714:352::-;7130:21;:19;:21::i;:::-;7499:16:::1;:14;:16::i;:::-;3054::22::2;:14;:16::i;:::-;;1339:19:16::3;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;31826:35:4::4;31810:13;;:51;;;;;;;;;;;;;;;;;;;;;;;;31966:50;31996:19;;31966:29;:50::i;:::-;32048:10;32032:27;;;;;;;;;;;;1406:20:16::3;:18;:20::i;:::-;31714:352:4:o:0;6650:58:3:-;;;;;;;;;:::o;8939:124:22:-;9005:26;;:::i;:::-;1625:19:16;:17;:19::i;:::-;9050:6:22::1;:4;:6::i;:::-;9043:13;;8939:124:::0;:::o;1858:34:4:-;;;;;;;;;;;;;:::o;3419:53::-;;;;;;;;;:::o;4529:43::-;;;;;;;;;:::o;4873:54::-;;;;;;;;;;;;;:::o;9480:64:22:-;1339:19:16;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;9530:7:22::1;:5;:7::i;:::-;1406:20:16::0;:18;:20::i;:::-;9480:64:22:o;3622:30:4:-;;;;:::o;33132:898::-;7046:20;:18;:20::i;:::-;7499:16:::1;:14;:16::i;:::-;1339:19:16::2;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;33277:36:4::3;:34;:36::i;:::-;33263:50;;:10;:50;;;:104;;;;33331:36;;;;;;;;;;;33317:50;;:10;:50;;;33263:104;33255:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;33452:34;33436:13;;:50;;;;;;;;;;;;;;;;;;;;;;;;33676:30;33709:19;;33676:52;;33760:16;:14;:16::i;:::-;33738:19;:38;;;;33896:36;;;;;;;;33916:15;33896:36;;::::0;33882:11:::3;:50;;;;;;;;;;;33967:10;33948:75;;;33979:22;34003:19;;33948:75;;;;;;;:::i;:::-;;;;;;;;1395:1:16;1406:20:::2;:18;:20::i;:::-;33132:898:4::0;:::o;36457:299::-;36539:26;;:::i;:::-;1625:19:16;:17;:19::i;:::-;36649:100:4::1;36689:59;36715:9;:18;36725:7;36715:18;;;;;;;;;;;;;;;:32;;36689:59;;;;;;;;;;;;;;;::::0;::::1;:25;:59::i;:::-;36649:39;:100::i;:::-;36642:107;;36457:299:::0;;;:::o;6764:1704:22:-;6871:37;;:::i;:::-;6922:38;;:::i;:::-;6974:36;;:::i;:::-;7035:20;7058:11;:9;:11::i;:::-;7035:34;;7079:41;;:::i;:::-;7123:6;:4;:6::i;:::-;7079:50;;7240:25;7263:1;7240:14;:22;;:25;;;;:::i;:::-;:52;;;;7288:4;7269:15;;:23;7240:52;7236:126;;;7308:43;;;;7236:126;7400:5;:23;;;7424:15;;7441:4;7447:14;7400:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7372:90;;;;;;;;7485:27;7500:11;7485:10;:14;;:27;;;;:::i;:::-;7473:39;;7526:20;7544:1;7526:9;:17;;:20;;;;:::i;:::-;7522:94;;;7562:43;;;;7522:94;7990:39;8014:14;7990:9;:23;;:39;;;;:::i;:::-;7986:476;;;8045:34;;:::i;:::-;8082:29;8096:14;8082:9;:13;;:29;;;;:::i;:::-;8045:66;;8125:47;;:::i;:::-;8175:36;8190:11;8203:7;8175:14;:36::i;:::-;8125:86;;8239:37;8255:20;8239:11;:15;;:37;;;;:::i;:::-;8225:51;;8300:33;8312:20;8300:7;:11;;:33;;;;:::i;:::-;8290:43;;8360:51;8375:35;8390:10;8402:7;8375:14;:35::i;:::-;8360:10;:14;;:51;;;;:::i;:::-;8347:64;;8437:14;8425:26;;7986:476;;;6764:1704;;;;;;;;:::o;3771:34:4:-;;;;:::o;4432:33::-;;;;:::o;26372:207:3:-;26488:40;1625:19:16;:17;:19::i;:::-;26551:12:3::1;:21;26564:7;26551:21;;;;;;;;;;;;;;;26544:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;::::0;::::1;;;;;;;;;;;;;;;;;;26372:207:::0;;;:::o;18520:1642::-;18692:36;;:::i;:::-;18613:13;18628:7;8019:35;8031:13;8046:7;8019:11;:35::i;:::-;3054:16:22::1;:14;:16::i;:::-;;1339:19:16::2;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;18744:43:3::3;18790;18810:7;18819:13;18790:19;:43::i;:::-;18744:89;;18960:44;;:::i;:::-;19019:163;19104:64;19130:19;:37;;19104:64;;;;;;;;;;;;;;;::::0;::::3;:25;:64::i;:::-;19019:63;19060:21;19019:63;;;;;;;;;;;;;;;::::0;::::3;:19;:36;;:40;;;;;;;;;;;;;;;::::0;::::3;;;:63;;;;:::i;:::-;:67;;:163;;;;:::i;:::-;18960:222;;19192:59;19207:24;19233:17;19192:14;:59::i;:::-;;19385:15;19357:19;:25;;;:43;;;;;;;;;;;;;;;;;;;;;;;;19441:10;19410:19;:28;;;:41;;;;;;;;;;;;;;;;;;19505:67;19536:19;:35;;;19505:30;:67::i;:::-;19686:10;19588:185;;19642:19;:30;;;;;;;;;;;;19588:185;;19621:7;19588:185;;;19710:13;19737:17;:26;;;19588:185;;;;;;;:::i;:::-;;;;;;;;19795:51;19817:19;:28;;19795:51;;;;;;;;;;;;;;;::::0;::::3;:17;:21;;:51;;;;:::i;:::-;19783:63;;19921:55;19935:10;19947:19;:28;;19921:55;;;;;;;;;;;;;;;::::0;::::3;:13;:55::i;:::-;20065:90;20101:10;20121:4;20128:17;:26;;;20065:18;;;;;;;;;;;:35;;;;:90;;;;;;:::i;:::-;1395:1:16;;1406:20:::2;:18;:20::i;:::-;18520:1642:3::0;;;;;;:::o;12915:392:4:-;7046:20;:18;:20::i;:::-;1339:19:16::1;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;13003:33:4::2;13039:28;13056:10;13039:16;:28::i;:::-;13003:64;;13138:1;13085:12;:49;;;:54;;13077:63;;;::::0;::::2;;13188:10;13156:43;;;;;;;;;;;;13299:1;13247:12;:49;;:53;;;;1395:1:16;1406:20:::1;:18;:20::i;:::-;12915:392:4:o:0;1335:29:22:-;;;;;;;;;;;;;:::o;17186:921:4:-;7046:20;:18;:20::i;:::-;17329:10:::1;7595:40;7627:7;7595:31;:40::i;:::-;1339:19:16::2;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;17378:33:4::3;17414:28;17431:10;17414:16;:28::i;:::-;17378:64;;17473:33;17504:1;17473:16;:30;;:33;;;;:::i;:::-;:142;;;;;17526:89;17561:53;17587:12;:26;;17561:53;;;;;;;;;;;;;;;::::0;::::3;:25;:53::i;:::-;17526:16;:34;;:89;;;;:::i;:::-;17473:142;17452:173;;;::::0;::::3;;17717:23;17743:40;17764:18;;17743:16;:14;:16::i;:::-;:20;;:40;;;;:::i;:::-;17717:66;;17819:19;;17801:15;:37;17793:46;;;::::0;::::3;;17948:15;17902:12;:43;;:61;;;;18012:16;17973:12;:36;;:55;;;;;;;;;;;18074:16;:25;;;18062:10;18044:56;;;;;;;;;;;;1395:1:16;;1406:20:::2;:18;:20::i;:::-;7076:1:4::1;17186:921:::0;:::o;35813:96::-;7046:20;:18;:20::i;:::-;1339:19:16::1;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;1406:20;:18;:20::i;:::-;35813:96:4:o:0;14889:221::-;15064:39;15074:10;15086:16;15064:9;:39::i;:::-;14889:221;:::o;1999:50:22:-;;;;;;;;;:::o;4624:38:4:-;;;;;;;;;:::o;28035:3345::-;28161:42;;:::i;:::-;7130:21;:19;:21::i;:::-;3054:16:22::1;:14;:16::i;:::-;;1339:19:16::2;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;28356:18:4::3;28339:35;;;;;;;;:13;;;;;;;;;;;:35;;;;;;;;;;28331:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;28522:34;28505:51:::0;::::3;;;;;;;:13;;;;;;;;;;;:51;;;;;;;;;28501:206;;28586:46;28612:19;;28586:25;:46::i;:::-;28572:11;:60;;;;;;;;;;;28662:34;28646:13;;:50;;;;;;;;;;;;;;;;;;;;;;;;28501:206;28809:41;;:::i;:::-;28853:56;;;;;;;;28873:13;;;;;;;;;;;:23;;;28897:10;28873:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28853:56;;::::0;28809:100:::3;;28919:52;;:::i;:::-;28974:31;28993:11;28974:31;;;;;;;;;;;;;;;::::0;::::3;:14;:18;;:31;;;;:::i;:::-;28919:86;;29150:33;29186:9;:21;29196:10;29186:21;;;;;;;;;;;;;;;29150:57;;29221:70;29289:1;29221:53;29247:12;:26;;29221:53;;;;;;;;;;;;;;;::::0;::::3;:25;:53::i;:::-;:67;;:70;;;;:::i;:::-;29217:1184;;;29417:53;;:::i;:::-;29473:47;29508:11;29473:47;;;;;;;;;;;;;;;::::0;::::3;:12;:30;;:34;;;;;;;;;;;;;;;::::0;::::3;;;:47;;;;:::i;:::-;29417:103;;29534:45;;:::i;:::-;29582:53;29608:12;:26;;29582:53;;;;;;;;;;;;;;;::::0;::::3;:25;:53::i;:::-;29534:101;;29748:55;;:::i;:::-;29822:57;29860:18;29822:26;:37;;:57;;;;:::i;:::-;:175;;29975:22;;;;;;;;29995:1;29975:22;;::::0;29822:175:::3;;;29902:50;29925:26;29902:18;:22;;:50;;;;:::i;:::-;29822:175;29748:249;;30145:59;30175:28;30145:25;:29;;:59;;;;:::i;:::-;30117:87;;30318:9;:21;30328:10;30318:21;;;;;;;;;;;;;;;;30311:28:::0;::::3;;;::::0;::::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;30379:10;30358:32;;;;;;;;;;;;29217:1184;;;;30606:33;;:::i;:::-;30654:96;30669:53;30695:26;30669:53;;;;;;;;;;;;;;;::::0;::::3;:25;:53::i;:::-;30724:25;30654:14;:96::i;:::-;30606:144;;30848:53;30866:26;30894:6;30848:17;:53::i;:::-;30830:71;;30936:42;30963:14;30936:22;:26;;;;;;;;;;;;;;;::::0;::::3;;;:42;;;;:::i;:::-;30911:22;:67;;;;;;;;;;;31054:14;:23;;;31028:15;:24;;;31016:10;30994:84;;;;;;;;;;;;31159:69;31191:10;31203:15;:24;;;31159:18;;;;;;;;;;;:31;;;;:69;;;;;:::i;:::-;31238:82;31269:10;31289:4;31296:14;:23;;;31238:13;;;;;;;;;;;:30;;;;:82;;;;;;:::i;:::-;31330:13;;;;;;;;;;;:18;;;31349:14;:23;;;31330:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;1395:1:16;;;;1406:20:::2;:18;:20::i;:::-;28035:3345:4::0;:::o;1032:135:15:-;1092:15;;:::i;:::-;1126:34;;;;;;;;1135:24;607:6;1135:1;:5;;:24;;;;:::i;:::-;1126:34;;;1119:41;;1032:135;;;:::o;2248:147::-;2324:4;2360:19;2377:1;2360:16;:19::i;:::-;:28;;;2347:1;:10;;;:41;2340:48;;2248:147;;;;:::o;6433:151::-;6507:15;;:::i;:::-;6541:36;;;;;;;;6550:26;6565:1;:10;;;6550:1;:10;;;:14;;:26;;;;:::i;:::-;6541:36;;;6534:43;;6433:151;;;;:::o;4184:144::-;4257:4;4293:19;4310:1;4293:16;:19::i;:::-;:28;;;4280:1;:10;;;:41;4273:48;;4184:144;;;;:::o;2119:459:7:-;2177:7;2423:1;2418;:6;2414:45;;;2447:1;2440:8;;;;2414:45;2469:9;2485:1;2481;:5;2469:17;;2513:1;2508;2504;:5;;;;;;:10;2496:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2570:1;2563:8;;;2119:459;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;42622:175:4:-;42691:7;42717:6;;;;;;;;;;;:31;;;42749:40;42717:73;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;42710:80;;42622:175;:::o;2158:186:16:-;2290:11;;;;;;;;;;;2282:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2158:186::o;51895:480:4:-;52022:26;;:::i;:::-;52069:45;52077:23;;;;;;;;;;;52069:43;;;:45::i;:::-;52064:64;;52123:5;52116:12;;;;52064:64;52142:23;;;;;;;;;;;:38;;;52181:5;52188:11;52142:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;52138:231;;52353:5;52346:12;;;;52138:231;52298:16;52291:23;;;51895:480;;;;;:::o;48843:136::-;48924:19;;48905:16;:14;:16::i;:::-;:38;48897:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;48843:136::o;49718:181::-;49868:1;49808:25;49825:7;49808:16;:25::i;:::-;:56;;;:61;49800:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;49718:181;:::o;2350:136:16:-;2474:5;2460:11;;:19;;;;;;;;;;;;;;;;;;2350:136::o;41827:202:4:-;41961:20;41935:7;7238:36;7266:7;7238:27;:36::i;:::-;42004:9:::1;:18;42014:7;42004:18;;;;;;;;;;;;;;;41997:25;;41827:202:::0;;;;:::o;46476:340::-;46634:26;;:::i;:::-;46672:60;46687:12;:26;;46715:16;46672:14;:60::i;:::-;;46749;46764:26;46792:16;46749:14;:60::i;:::-;46742:67;;46476:340;;;;:::o;843:203:11:-;943:96;963:5;993:27;;;1022:4;1028:2;1032:5;970:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;943:19;:96::i;:::-;843:203;;;;:::o;2492:206:16:-;2687:4;2673:11;;:18;;;;;;;;;;;;;;;;;;2492:206::o;31859:565:3:-;31981:26;;:::i;:::-;32028:45;32036:23;;;;;;;;;;;32028:43;;;:45::i;:::-;32023:80;;32082:21;32075:28;;;;;;;;;;;;;;;;;;;;;32023:80;32117:23;;;;;;;;;;;:54;;;32172:5;32179:21;32117:84;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;32113:305;;32386:21;32379:28;;;;;;;;;;;;;;;;;;;;;32113:305;32315:32;32308:39;;;31859:565;;;;:::o;46129:220:4:-;46255:30;46283:1;46255:27;:30::i;:::-;46216:12;:36;;:69;;;;;;;;;;;46341:1;46295:12;:43;;:47;;;;46129:220;:::o;5792:146:15:-;5866:15;;:::i;:::-;5913:1;:10;;;5900:1;:10;;;:23;:31;;5930:1;5900:31;;;5926:1;5900:31;5893:38;;5792:146;;;;:::o;12169:233:22:-;12293:37;;:::i;:::-;12353:42;12371:23;12353:42;;;;;;;;;;;;;;;;;:13;:17;;:42;;;;:::i;:::-;12346:49;;12169:233;;;:::o;4820:142:15:-;4908:4;4945:1;:10;;;4931:1;:10;;;:24;;4924:31;;4820:142;;;;:::o;7107:151::-;7181:15;;:::i;:::-;7215:36;;;;;;;;7224:26;7239:1;:10;;;7224:1;:10;;;:14;;:26;;;;:::i;:::-;7215:36;;;7208:43;;7107:151;;;;:::o;8186:650::-;8260:15;;:::i;:::-;8773:56;;;;;;;;607:6;8782:26;8797:1;:10;;;8782:1;:10;;;:14;;:26;;;;:::i;:::-;:46;;;;;;8773:56;;;8766:63;;8186:650;;;;:::o;2896:145::-;2987:4;3024:1;:10;;;3010:1;:10;;;:24;;3003:31;;2896:145;;;;:::o;11695:208:22:-;11747:36;;:::i;:::-;11795:20;11818:11;:9;:11::i;:::-;11795:34;;11846:5;:21;;;11876:18;;;;;;;;;;;11846:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11839:57;;;11695:208;:::o;10602:634:15:-;10676:15;;:::i;:::-;11170:59;;;;;;;;11179:49;11217:1;:10;;;11179:33;607:6;11179:1;:10;;;:14;;:33;;;;:::i;:::-;:37;;:49;;;;:::i;:::-;11170:59;;;11163:66;;10602:634;;;;:::o;39059:1480:4:-;39308:33;39344:25;39361:7;39344:16;:25::i;:::-;39308:61;;39468:54;39491:12;:30;;39468:54;;;;;;;;;;;;;;;;;:14;:22;;:54;;;;:::i;:::-;:151;;;;;39538:81;39600:18;39538:53;39564:12;:26;;39538:53;;;;;;;;;;;;;;;;;:25;:53::i;:::-;:61;;:81;;;;:::i;:::-;39468:151;39451:255;;;39644:31;39667:7;39644:22;:31::i;:::-;;39689:7;;;39451:255;39793:62;39822:12;39836:18;39793:28;:62::i;:::-;;39954:40;;:::i;:::-;39997:50;40032:14;39997:12;:30;;:34;;;;;;;;;;;;;;;;;;;:50;;;;:::i;:::-;39954:93;;40065:52;40100:16;40065:52;;;;;;;;;;;;;;;;;:13;:34;;:52;;;;:::i;:::-;40057:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;40195:13;40162:12;:30;;:46;;;;;;;;;;;40313:66;40354:24;40313:12;:36;;:40;;;;;;;;;;;;;;;;;;;:66;;;;:::i;:::-;40274:12;:36;;:105;;;;;;;;;;;40490:42;40517:14;40490:22;:26;;;;;;;;;;;;;;;;;;;:42;;;;:::i;:::-;40465:22;:67;;;;;;;;;;;39059:1480;;;;;;;:::o;15778:561:22:-;15923:42;;:::i;:::-;15981:41;;:::i;:::-;16025:40;16051:13;16025:40;;;;;;;;;;;;;;;;;:25;:40::i;:::-;15981:84;;16075:45;;:::i;:::-;16123:40;16147:15;16123:23;:40::i;:::-;16075:88;;16198:37;16216:18;16198:13;:17;;;;;;;;;;;;;;;;;;;:37;;;;:::i;:::-;:46;;;16173:13;:22;;:71;;;;16272:60;16317:14;16272:40;16298:13;16272:40;;;;;;;;;;;;;;;;;:25;:40::i;:::-;:44;;:60;;;;:::i;:::-;16254:78;;15778:561;;;;;;:::o;13586:228::-;13705:40;;:::i;:::-;13768:39;13783:23;13768:39;;;;;;;;;;;;;;;;;:10;:14;;:39;;;;:::i;:::-;13761:46;;13586:228;;;:::o;1942:137:15:-;2026:4;2062:1;:10;;;2049:1;:10;;;:23;2042:30;;1942:137;;;;:::o;47282:346:4:-;47440:26;;:::i;:::-;47478:63;47496:12;:26;;47524:16;47478:17;:63::i;:::-;;47558;47576:26;47604:16;47558:17;:63::i;:::-;47551:70;;47282:346;;;;:::o;662:175:11:-;744:86;764:5;794:23;;;819:2;823:5;771:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;744:19;:86::i;:::-;662:175;;;:::o;48706:131:4:-;48781:18;48764:35;;;;;;;;:13;;;;;;;;;;;:35;;;;;;;;;48756:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;48706:131::o;42897:840::-;42978:42;43023:22;:20;:22::i;:::-;42978:67;;43141:33;;:::i;:::-;43177:19;:17;:19::i;:::-;43141:55;;43206:84;43255:16;43274:6;:15;;;43206:18;;;;;;;;;;;:40;;;;:84;;;;;:::i;:::-;43300:16;:29;;;43343:40;43369:13;43343:25;:40::i;:::-;43397:13;43424:19;:17;:19::i;:::-;43457:18;;;;;;;;;;;43489:6;:15;;;43300:250;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;43684:46;43715:6;43723;:4;:6::i;:::-;43684:30;:46::i;:::-;42897:840;;;:::o;31345:508:3:-;31432:35;31470:43;31490:7;31499:13;31470:19;:43::i;:::-;31432:81;;31523:12;31538:11;:17;;;;;;;;;;;;31523:32;;31662:18;31654:26;;;;;;;;:5;:26;;;;;;;;;31653:139;;;;31741:16;:14;:16::i;:::-;31703:34;31725:11;31703:21;:34::i;:::-;:54;;31702:89;;;;;31772:18;31763:27;;;;;;;;:5;:27;;;;;;;;;31702:89;31653:139;31632:214;;;;;;;;;;;;:::i;:::-;;;;;;;;;31345:508;;;;:::o;29890:631::-;30006:35;30057:42;30102:12;:21;30115:7;30102:21;;;;;;;;;;;;;;;30057:66;;30330:16;:23;;;;30314:13;:39;:104;;;;;30398:20;30357:61;;;;;;;;:16;30374:13;30357:31;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:61;;;;;;;;;;30314:104;30293:173;;;;;;;;;;;;:::i;:::-;;;;;;;;;30483:16;30500:13;30483:31;;;;;;;;;;;;;;;;;;30476:38;;;29890:631;;;;:::o;27678:2031::-;27754:35;27792:43;27812:7;27821:13;27792:19;:43::i;:::-;27754:81;;28070:15;28049:36;;;;;;;;:11;:17;;;;;;;;;;;;:36;;;;;;;;;28045:73;;28101:7;;;28045:73;28251:55;28278:11;:27;;;28251:26;:55::i;:::-;28221:11;:27;;:85;;;;;;;;;;;28387:47;;:::i;:::-;28449:62;28483:11;:27;;28449:62;;;;;;;;;;;;;;;;;:11;:29;;:33;;;;;;;;;;;;;;;;;;;:62;;;;:::i;:::-;28387:124;;28895:45;;:::i;:::-;28955:86;28980:60;29012:11;:27;;28980:60;;;;;;;;;;;;;;;;;:31;:60::i;:::-;28955:20;:24;;:86;;;;:::i;:::-;28895:146;;29298:21;29322:73;29376:18;29322:11;:32;;:53;;;;;;;;;;;;;;;;;;;:73;;;;:::i;:::-;29298:97;;29425:16;:65;;29470:20;29425:65;;;29444:23;29425:65;29405:11;:17;;;:85;;;;;;;;;;;;;;;;;;;;;;;;29579:11;:22;;;;;;;;;;;;29506:196;;29558:7;29506:196;;29534:10;29506:196;;;29615:11;:20;;;;;;;;;;;;29649:13;29676:16;29506:196;;;;;;;;:::i;:::-;;;;;;;;27678:2031;;;;;;;:::o;14394:574:22:-;14545:44;;:::i;:::-;14605:41;;:::i;:::-;14649:40;14675:13;14649:40;;;;;;;;;;;;;;;;;:25;:40::i;:::-;14605:84;;14699:45;;:::i;:::-;14747:43;14771:18;14747:23;:43::i;:::-;14699:91;;14825:37;14843:18;14825:13;:17;;;;;;;;;;;;;;;;;;;:37;;;;:::i;:::-;:46;;;14800:13;:22;;:71;;;;14901:60;14920:40;14946:13;14920:40;;;;;;;;;;;;;;;;;:25;:40::i;:::-;14901:14;:18;;:60;;;;:::i;:::-;14881:80;;14394:574;;;;;;:::o;29715:169:3:-;29763:26;;:::i;:::-;29808:69;29825:51;29851:24;29825:51;;;;;;;;;;;;;;;;;:25;:51::i;:::-;29808:12;:10;:12::i;:::-;:16;;:69;;;;:::i;:::-;29801:76;;29715:169;:::o;1330:142:15:-;1400:4;1437:19;1454:1;1437:16;:19::i;:::-;:28;;;1423:1;:10;;;:42;1416:49;;1330:142;;;;:::o;16449:333:22:-;16594:39;;:::i;:::-;16636:26;16651:10;16636:6;:14;;:26;;;;:::i;:::-;16594:68;;16698:77;16726:48;16761:12;16726:30;16754:1;16726:27;:30::i;:::-;:34;;:48;;;;:::i;:::-;16698:23;:27;;;;;;;;;;;;;;;;;;;:77;;;;:::i;:::-;16672:23;:103;;;;;;;;;;;16449:333;;;:::o;11534:155::-;11578:14;11626:6;;;;;;;;;;;:31;;;11658:22;11626:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11604:78;;11534:155;:::o;1671:283:11:-;1767:20;1790:50;1834:5;1790;:15;;;1814:4;1821:7;1790:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;:50;;;;:::i;:::-;1767:73;;1850:97;1870:5;1900:22;;;1924:7;1933:12;1877:69;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1850:19;:97::i;:::-;1671:283;;;;:::o;47992:434:4:-;48158:26;;:::i;:::-;48196:63;48214:12;:26;;48242:16;48196:17;:63::i;:::-;;48277:45;48309:12;48277:31;:45::i;:::-;48269:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;48356:63;48374:26;48402:16;48356:17;:63::i;:::-;48349:70;;47992:434;;;;:::o;12500:842:22:-;12638:26;;:::i;:::-;12685:61;;:::i;:::-;12762:43;12788:16;:14;:16::i;:::-;12762:25;:43::i;:::-;12680:125;;;;12819:74;12862:30;12890:1;12862:27;:30::i;:::-;12819:34;:42;;:74;;;;:::i;:::-;12815:100;;;12902:13;12895:20;;;;;12815:100;13022:50;;:::i;:::-;13075;13118:6;:4;:6::i;:::-;13075:34;:42;;:50;;;;:::i;:::-;13022:103;;13257:78;13275:59;13310:23;13275:30;13303:1;13275:27;:30::i;:::-;:34;;:59;;;;:::i;:::-;13257:13;:17;;:78;;;;:::i;:::-;13250:85;;;;12500:842;;;;:::o;1638:132:15:-;1716:4;1753:1;:10;;;1739:1;:10;;;:24;1732:31;;1638:132;;;;:::o;40648:1006:4:-;40715:26;;:::i;:::-;40753:40;40796:25;40813:7;40796:16;:25::i;:::-;40753:68;;40832:51;;:::i;:::-;40886:53;40912:26;40886:53;;;;;;;;;;;;;;;;;:25;:53::i;:::-;40832:107;;41032:49;;:::i;:::-;41084:19;:33;;41032:85;;;;;;;;;;;;;;;;;;;41156:54;41187:22;41156:26;:30;;;;;;;;;;;;;;;;;;;:54;;;;:::i;:::-;41127:26;:83;;;;;;;;;;;41245:65;41272:19;:37;;41245:65;;;;;;;;;;;;;;;;;:22;:26;;;;;;;;;;;;;;;;;;;:65;;;;:::i;:::-;41220:22;:90;;;;;;;;;;;41408:9;:18;41418:7;41408:18;;;;;;;;;;;;;;;;41401:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41463:7;41442:29;;;;;;;;;;;;41564:83;41593:53;41619:26;41593:53;;;;;;;;;;;;;;;;;:25;:53::i;:::-;41564:24;:28;;:83;;;;:::i;:::-;41557:90;;;;;40648:1006;;;:::o;52381:440::-;52460:7;52484:45;52492:23;;;;;;;;;;;52484:43;;;:45::i;:::-;52479:74;;52538:15;;52531:22;;;;52479:74;52567:23;;;;;;;;;;;:48;;;52616:15;;52633:11;52567:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;52563:252;;52789:15;;52782:22;;;;52563:252;52729:21;52722:28;;;52381:440;;;;:::o;50490:485::-;50646:4;50666:33;;:::i;:::-;50714:105;50741:53;50767:26;50741:53;;;;;;;;;;;;;;;;;:25;:53::i;:::-;50796:22;50714:105;;;;;;;;;;;;;;;;;:26;:105::i;:::-;50666:153;;50829:37;;:::i;:::-;50869:49;50896:10;50908:9;50869:26;:49::i;:::-;50829:89;;50936:32;50957:10;50936:6;:20;;:32;;;;:::i;:::-;50935:33;50928:40;;;;50490:485;;;;:::o;48985:139::-;49068:19;;49048:16;:14;:16::i;:::-;:39;;49040:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;48985:139::o;11078:369:22:-;11114:37;;:::i;:::-;11154:6;:4;:6::i;:::-;11114:46;;11170:41;;:::i;:::-;11214:64;;;;;;;;11234:18;;;;;;;;;;;:28;;;11271:4;11234:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11214:64;;;11170:108;;11292:37;11314:14;11292:10;:21;;:37;;;;:::i;:::-;11288:153;;;11371:59;11399:30;11418:10;11399:14;:18;;:30;;;;:::i;:::-;11371:23;:27;;;;;;;;;;;;;;;;;;;:59;;;;:::i;:::-;11345:23;:85;;;;;;;;;;;11288:153;11078:369;;:::o;30983:356:3:-;31068:35;31106:43;31126:7;31135:13;31106:19;:43::i;:::-;31068:81;;31200:34;31222:11;31200:21;:34::i;:::-;31181:16;:14;:16::i;:::-;:53;31180:100;;;;;31261:18;31240:39;;;;;;;;:11;:17;;;;;;;;;;;;:39;;;;;;;;;31180:100;31159:173;;;;;;;;;;;;:::i;:::-;;;;;;;;;30983:356;;;:::o;44974:212:4:-;45056:22;45081:12;:10;:12::i;:::-;45056:37;;45103:6;:19;;;45123:40;45149:13;45123:25;:40::i;:::-;45165:13;45103:76;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44974:212;;:::o;9991:1081:22:-;10087:17;10102:1;10087:6;:14;;:17;;;;:::i;:::-;10083:54;;;10120:7;;10083:54;10168:4;10151:22;;:5;:22;;;10147:674;;10273:74;10309:5;10324:4;10331:6;:15;;;10273:18;;;;;;;;;;;:35;;;;:74;;;;;;:::i;:::-;10147:674;;;10473:41;;:::i;:::-;10517:6;:4;:6::i;:::-;10473:50;;10704:36;10733:6;10704:14;:28;;:36;;;;:::i;:::-;10696:45;;;;;;10756:54;10787:6;10795:14;10756:30;:54::i;:::-;10147:674;;10850:6;:15;;;10836:30;;;;;;;;;;10877:20;10900:11;:9;:11::i;:::-;10877:34;;10921:73;10970:5;10978:6;:15;;;10921:18;;;;;;;;;;;:40;;;;:73;;;;;:::i;:::-;11004:5;:24;;;11037:18;;;;;;;;;;;11058:6;11004:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9991:1081;;;;:::o;43855:1019:4:-;43931:26;;:::i;:::-;44069:42;44114:22;:20;:22::i;:::-;44069:67;;44167:16;:25;;;44218:4;44241:40;44267:13;44241:25;:40::i;:::-;44299:13;44330:19;:17;:19::i;:::-;44167:196;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;44146:227;;;;;;44383:28;44426:16;:34;;;44478:40;44504:13;44478:25;:40::i;:::-;44536:13;44567:19;:17;:19::i;:::-;44426:174;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;44383:217;;44715:1;44691:21;:25;44687:81;;;44756:1;44732:25;;44687:81;44784:83;44800:51;;;;;;;;44828:21;44800:51;;;44853:13;44784:15;:83::i;:::-;44777:90;;;;43855:1019;;;:::o;3884:134:15:-;3965:4;4001:1;:10;;;3988:1;:10;;;:23;3981:30;;3884:134;;;;:::o;685:610:12:-;745:4;1003:16;1029:19;1051:66;1029:88;;;;1218:7;1206:20;1194:32;;1257:11;1245:8;:23;;:42;;;;;1284:3;1272:15;;:8;:15;;1245:42;1237:51;;;;685:610;;;:::o;49130:234:4:-;49229:76;49303:1;49229:59;49255:9;:18;49265:7;49255:18;;;;;;;;;;;;;;;:32;;49229:59;;;;;;;;;;;;;;;;;:25;:59::i;:::-;:73;;:76;;;;:::i;:::-;49208:149;;;;;;;;;;;;:::i;:::-;;;;;;;;;49130:234;:::o;2671:1096:11:-;3267:27;3275:5;3267:25;;;:27::i;:::-;3259:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3401:12;3415:23;3450:5;3442:19;;3462:4;3442:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3400:67;;;;3485:7;3477:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3564:1;3544:10;:17;:21;3540:221;;;3684:10;3673:30;;;;;;;;;;;;:::i;:::-;3665:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3540:221;2671:1096;;;;:::o;1274:134:7:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;3033:130::-;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3110:46;;3033:130;;;;:::o;42417:199:4:-;42472:25;42542:6;;;;;;;;;;;:31;;;42574:33;42542:66;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;42509:100;;42417:199;:::o;52827:296::-;52879:12;53101:13;;;;;;;;;;;53076:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;53069:47;;52827:296;:::o;30527:176:3:-;30618:7;30644:52;30676:19;;30644:11;:27;;;:31;;:52;;;;:::i;:::-;30637:59;;30527:176;;;:::o;45304:722:4:-;45386:26;;:::i;:::-;45524:22;45549:12;:10;:12::i;:::-;45524:37;;45579:6;:15;;;45595:40;45621:13;45595:25;:40::i;:::-;45637:13;45579:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;45571:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;45689:18;45710:6;:15;;;45726:40;45752:13;45726:25;:40::i;:::-;45768:13;45710:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;45689:93;;45887:1;45873:11;:15;45869:61;;;45918:1;45904:15;;45869:61;45946:73;45962:41;;;;;;;;45990:11;45962:41;;;46005:13;45946:15;:73::i;:::-;45939:80;;;;45304:722;;;:::o;41660:161::-;41716:26;;:::i;:::-;41761:53;41787:26;41761:53;;;;;;;;;;;;;;;;;:25;:53::i;:::-;41754:60;;41660:161;:::o;12377:398:15:-;12455:15;;:::i;:::-;12482;12500:33;607:6;12500:1;:10;;;:14;;:33;;;;:::i;:::-;12482:51;;12543:16;12562:23;12574:1;:10;;;12562:7;:11;;:23;;;;:::i;:::-;12543:42;;12595:11;12609:23;12621:1;:10;;;12609:7;:11;;:23;;;;:::i;:::-;12595:37;;12653:1;12646:3;:8;12642:127;;12677:25;;;;;;;;12686:15;12699:1;12686:8;:12;;:15;;;;:::i;:::-;12677:25;;;12670:32;;;;;;;12642:127;12740:18;;;;;;;;12749:8;12740:18;;;12733:25;;;;;12377:398;;;;;:::o;50044:296:4:-;50142:4;50177:156;50218:53;50244:12;:26;;50218:53;;;;;;;;;;;;;;;;;:25;:53::i;:::-;50289:12;:30;;50177:156;;;;;;;;;;;;;;;;;:23;:156::i;:::-;50158:175;;50044:296;;;:::o;50981:371::-;51140:32;;:::i;:::-;51193:26;51217:1;51193:9;:23;;:26;;;;:::i;:::-;51188:158;;51242:30;51270:1;51242:27;:30::i;:::-;51235:37;;;;51188:158;51310:25;51325:9;51310:10;:14;;:25;;;;:::i;:::-;51303:32;;50981:371;;;;;:::o;42252:159::-;42297:15;42347:6;;;;;;;;;;;:31;;;42379:23;42347:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;42324:80;;42252:159;:::o;1692:187:7:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;3638:338::-;3724:7;3821:1;3817;:5;3824:12;3809:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3847:9;3863:1;3859;:5;;;;;;3847:17;;3968:1;3961:8;;;3638:338;;;;;:::o;4420:128::-;4478:7;4504:37;4508:1;4511;4504:37;;;;;;;;;;;;;;;;;:3;:37::i;:::-;4497:44;;4420:128;;;;:::o;5012:163::-;5098:7;5130:1;5125;:6;;5133:12;5117:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5167:1;5163;:5;;;;;;5156:12;;5012:163;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:134::-;;226:6;220:13;211:22;;238:33;265:5;238:33;:::i;:::-;205:71;;;;:::o;283:128::-;;364:6;358:13;349:22;;376:30;400:5;376:30;:::i;:::-;343:68;;;;:::o;418:134::-;;502:6;496:13;487:22;;514:33;541:5;514:33;:::i;:::-;481:71;;;;:::o;559:132::-;;642:6;636:13;627:22;;654:32;680:5;654:32;:::i;:::-;621:70;;;;:::o;733:159::-;;845:2;836:6;831:3;827:16;823:25;820:2;;;861:1;858;851:12;820:2;880:6;871:15;;813:79;;;;:::o;932:328::-;;1047:4;1035:9;1030:3;1026:19;1022:30;1019:2;;;1065:1;1062;1055:12;1019:2;1083:20;1098:4;1083:20;:::i;:::-;1074:29;;1157:1;1189:49;1234:3;1225:6;1214:9;1210:22;1189:49;:::i;:::-;1182:4;1175:5;1171:16;1164:75;1113:137;1013:247;;;;:::o;1300:350::-;;1426:4;1414:9;1409:3;1405:19;1401:30;1398:2;;;1444:1;1441;1434:12;1398:2;1462:20;1477:4;1462:20;:::i;:::-;1453:29;;1536:1;1568:60;1624:3;1615:6;1604:9;1600:22;1568:60;:::i;:::-;1561:4;1554:5;1550:16;1543:86;1492:148;1392:258;;;;:::o;1657:130::-;;1737:6;1724:20;1715:29;;1749:33;1776:5;1749:33;:::i;:::-;1709:78;;;;:::o;1794:134::-;;1878:6;1872:13;1863:22;;1890:33;1917:5;1890:33;:::i;:::-;1857:71;;;;:::o;1935:130::-;;2017:6;2011:13;2002:22;;2029:31;2054:5;2029:31;:::i;:::-;1996:69;;;;:::o;2072:241::-;;2176:2;2164:9;2155:7;2151:23;2147:32;2144:2;;;2192:1;2189;2182:12;2144:2;2227:1;2244:53;2289:7;2280:6;2269:9;2265:22;2244:53;:::i;:::-;2234:63;;2206:97;2138:175;;;;:::o;2320:263::-;;2435:2;2423:9;2414:7;2410:23;2406:32;2403:2;;;2451:1;2448;2441:12;2403:2;2486:1;2503:64;2559:7;2550:6;2539:9;2535:22;2503:64;:::i;:::-;2493:74;;2465:108;2397:186;;;;:::o;2590:911::-;;;;;;2846:3;2834:9;2825:7;2821:23;2817:33;2814:2;;;2863:1;2860;2853:12;2814:2;2898:1;2915:53;2960:7;2951:6;2940:9;2936:22;2915:53;:::i;:::-;2905:63;;2877:97;3005:2;3023:81;3096:7;3087:6;3076:9;3072:22;3023:81;:::i;:::-;3013:91;;2984:126;3141:2;3159:81;3232:7;3223:6;3212:9;3208:22;3159:81;:::i;:::-;3149:91;;3120:126;3277:2;3295:81;3368:7;3359:6;3348:9;3344:22;3295:81;:::i;:::-;3285:91;;3256:126;3413:3;3432:53;3477:7;3468:6;3457:9;3453:22;3432:53;:::i;:::-;3422:63;;3392:99;2808:693;;;;;;;;:::o;3508:418::-;;;3655:2;3643:9;3634:7;3630:23;3626:32;3623:2;;;3671:1;3668;3661:12;3623:2;3706:1;3723:53;3768:7;3759:6;3748:9;3744:22;3723:53;:::i;:::-;3713:63;;3685:97;3813:2;3831:79;3902:7;3893:6;3882:9;3878:22;3831:79;:::i;:::-;3821:89;;3792:124;3617:309;;;;;:::o;3933:366::-;;;4054:2;4042:9;4033:7;4029:23;4025:32;4022:2;;;4070:1;4067;4060:12;4022:2;4105:1;4122:53;4167:7;4158:6;4147:9;4143:22;4122:53;:::i;:::-;4112:63;;4084:97;4212:2;4230:53;4275:7;4266:6;4255:9;4251:22;4230:53;:::i;:::-;4220:63;;4191:98;4016:283;;;;;:::o;4306:257::-;;4418:2;4406:9;4397:7;4393:23;4389:32;4386:2;;;4434:1;4431;4424:12;4386:2;4469:1;4486:61;4539:7;4530:6;4519:9;4515:22;4486:61;:::i;:::-;4476:71;;4448:105;4380:183;;;;:::o;4570:263::-;;4685:2;4673:9;4664:7;4660:23;4656:32;4653:2;;;4701:1;4698;4691:12;4653:2;4736:1;4753:64;4809:7;4800:6;4789:9;4785:22;4753:64;:::i;:::-;4743:74;;4715:108;4647:186;;;;:::o;4840:261::-;;4954:2;4942:9;4933:7;4929:23;4925:32;4922:2;;;4970:1;4967;4960:12;4922:2;5005:1;5022:63;5077:7;5068:6;5057:9;5053:22;5022:63;:::i;:::-;5012:73;;4984:107;4916:185;;;;:::o;5108:293::-;;5238:2;5226:9;5217:7;5213:23;5209:32;5206:2;;;5254:1;5251;5244:12;5206:2;5289:1;5306:79;5377:7;5368:6;5357:9;5353:22;5306:79;:::i;:::-;5296:89;;5268:123;5200:201;;;;:::o;5408:315::-;;5549:2;5537:9;5528:7;5524:23;5520:32;5517:2;;;5565:1;5562;5555:12;5517:2;5600:1;5617:90;5699:7;5690:6;5679:9;5675:22;5617:90;:::i;:::-;5607:100;;5579:134;5511:212;;;;:::o;5730:470::-;;;5903:2;5891:9;5882:7;5878:23;5874:32;5871:2;;;5919:1;5916;5909:12;5871:2;5954:1;5971:79;6042:7;6033:6;6022:9;6018:22;5971:79;:::i;:::-;5961:89;;5933:123;6087:2;6105:79;6176:7;6167:6;6156:9;6152:22;6105:79;:::i;:::-;6095:89;;6066:124;5865:335;;;;;:::o;6207:503::-;;;6391:2;6379:9;6370:7;6366:23;6362:32;6359:2;;;6407:1;6404;6397:12;6359:2;6442:1;6459:90;6541:7;6532:6;6521:9;6517:22;6459:90;:::i;:::-;6449:100;;6421:134;6586:2;6604:90;6686:7;6677:6;6666:9;6662:22;6604:90;:::i;:::-;6594:100;;6565:135;6353:357;;;;;:::o;6717:418::-;;;6864:2;6852:9;6843:7;6839:23;6835:32;6832:2;;;6880:1;6877;6870:12;6832:2;6915:1;6932:79;7003:7;6994:6;6983:9;6979:22;6932:79;:::i;:::-;6922:89;;6894:123;7048:2;7066:53;7111:7;7102:6;7091:9;7087:22;7066:53;:::i;:::-;7056:63;;7027:98;6826:309;;;;;:::o;7142:241::-;;7246:2;7234:9;7225:7;7221:23;7217:32;7214:2;;;7262:1;7259;7252:12;7214:2;7297:1;7314:53;7359:7;7350:6;7339:9;7335:22;7314:53;:::i;:::-;7304:63;;7276:97;7208:175;;;;:::o;7390:263::-;;7505:2;7493:9;7484:7;7480:23;7476:32;7473:2;;;7521:1;7518;7511:12;7473:2;7556:1;7573:64;7629:7;7620:6;7609:9;7605:22;7573:64;:::i;:::-;7563:74;;7535:108;7467:186;;;;:::o;7660:366::-;;;7781:2;7769:9;7760:7;7756:23;7752:32;7749:2;;;7797:1;7794;7787:12;7749:2;7832:1;7849:53;7894:7;7885:6;7874:9;7870:22;7849:53;:::i;:::-;7839:63;;7811:97;7939:2;7957:53;8002:7;7993:6;7982:9;7978:22;7957:53;:::i;:::-;7947:63;;7918:98;7743:283;;;;;:::o;8033:259::-;;8146:2;8134:9;8125:7;8121:23;8117:32;8114:2;;;8162:1;8159;8152:12;8114:2;8197:1;8214:62;8268:7;8259:6;8248:9;8244:22;8214:62;:::i;:::-;8204:72;;8176:106;8108:184;;;;:::o;8300:303::-;;8451:110;8557:3;8549:6;8451:110;:::i;:::-;8590:6;8585:3;8581:16;8567:30;;8444:159;;;;:::o;8611:142::-;8702:45;8741:5;8702:45;:::i;:::-;8697:3;8690:58;8684:69;;:::o;8760:103::-;8833:24;8851:5;8833:24;:::i;:::-;8828:3;8821:37;8815:48;;:::o;8870:113::-;8953:24;8971:5;8953:24;:::i;:::-;8948:3;8941:37;8935:48;;:::o;8990:152::-;9091:45;9111:24;9129:5;9111:24;:::i;:::-;9091:45;:::i;:::-;9086:3;9079:58;9073:69;;:::o;9236:946::-;;9445:86;9525:5;9445:86;:::i;:::-;9544:118;9655:6;9650:3;9544:118;:::i;:::-;9537:125;;9683:88;9765:5;9683:88;:::i;:::-;9791:7;9819:1;9804:356;9829:6;9826:1;9823:13;9804:356;;;9896:6;9890:13;9917:127;10040:3;10025:13;9917:127;:::i;:::-;9910:134;;10061:92;10146:6;10061:92;:::i;:::-;10051:102;;9861:299;9851:1;9848;9844:9;9839:14;;9804:356;;;9808:14;10173:3;10166:10;;9424:758;;;;;;;:::o;10190:104::-;10267:21;10282:5;10267:21;:::i;:::-;10262:3;10255:34;10249:45;;:::o;10301:113::-;10384:24;10402:5;10384:24;:::i;:::-;10379:3;10372:37;10366:48;;:::o;10421:343::-;;10531:38;10563:5;10531:38;:::i;:::-;10581:70;10644:6;10639:3;10581:70;:::i;:::-;10574:77;;10656:52;10701:6;10696:3;10689:4;10682:5;10678:16;10656:52;:::i;:::-;10729:29;10751:6;10729:29;:::i;:::-;10724:3;10720:39;10713:46;;10511:253;;;;;:::o;10771:356::-;;10899:38;10931:5;10899:38;:::i;:::-;10949:88;11030:6;11025:3;10949:88;:::i;:::-;10942:95;;11042:52;11087:6;11082:3;11075:4;11068:5;11064:16;11042:52;:::i;:::-;11115:6;11110:3;11106:16;11099:23;;10879:248;;;;;:::o;11134:172::-;11240:60;11294:5;11240:60;:::i;:::-;11235:3;11228:73;11222:84;;:::o;11313:190::-;11428:69;11491:5;11428:69;:::i;:::-;11423:3;11416:82;11410:93;;:::o;11510:174::-;11617:61;11672:5;11617:61;:::i;:::-;11612:3;11605:74;11599:85;;:::o;11691:156::-;11789:52;11835:5;11789:52;:::i;:::-;11784:3;11777:65;11771:76;;:::o;11854:158::-;11953:53;12000:5;11953:53;:::i;:::-;11948:3;11941:66;11935:77;;:::o;12019:132::-;12100:45;12139:5;12100:45;:::i;:::-;12095:3;12088:58;12082:69;;:::o;12158:142::-;12249:45;12288:5;12249:45;:::i;:::-;12244:3;12237:58;12231:69;;:::o;12307:347::-;;12419:39;12452:5;12419:39;:::i;:::-;12470:71;12534:6;12529:3;12470:71;:::i;:::-;12463:78;;12546:52;12591:6;12586:3;12579:4;12572:5;12568:16;12546:52;:::i;:::-;12619:29;12641:6;12619:29;:::i;:::-;12614:3;12610:39;12603:46;;12399:255;;;;;:::o;12662:328::-;;12822:67;12886:2;12881:3;12822:67;:::i;:::-;12815:74;;12922:30;12918:1;12913:3;12909:11;12902:51;12981:2;12976:3;12972:12;12965:19;;12808:182;;;:::o;12999:327::-;;13159:67;13223:2;13218:3;13159:67;:::i;:::-;13152:74;;13259:29;13255:1;13250:3;13246:11;13239:50;13317:2;13312:3;13308:12;13301:19;;13145:181;;;:::o;13335:320::-;;13495:67;13559:2;13554:3;13495:67;:::i;:::-;13488:74;;13595:22;13591:1;13586:3;13582:11;13575:43;13646:2;13641:3;13637:12;13630:19;;13481:174;;;:::o;13664:332::-;;13824:67;13888:2;13883:3;13824:67;:::i;:::-;13817:74;;13924:34;13920:1;13915:3;13911:11;13904:55;13987:2;13982:3;13978:12;13971:19;;13810:186;;;:::o;14005:326::-;;14165:67;14229:2;14224:3;14165:67;:::i;:::-;14158:74;;14265:28;14261:1;14256:3;14252:11;14245:49;14322:2;14317:3;14313:12;14306:19;;14151:180;;;:::o;14340:323::-;;14500:67;14564:2;14559:3;14500:67;:::i;:::-;14493:74;;14600:25;14596:1;14591:3;14587:11;14580:46;14654:2;14649:3;14645:12;14638:19;;14486:177;;;:::o;14672:330::-;;14832:67;14896:2;14891:3;14832:67;:::i;:::-;14825:74;;14932:32;14928:1;14923:3;14919:11;14912:53;14993:2;14988:3;14984:12;14977:19;;14818:184;;;:::o;15011:322::-;;15171:67;15235:2;15230:3;15171:67;:::i;:::-;15164:74;;15271:24;15267:1;15262:3;15258:11;15251:45;15324:2;15319:3;15315:12;15308:19;;15157:176;;;:::o;15342:326::-;;15502:67;15566:2;15561:3;15502:67;:::i;:::-;15495:74;;15602:28;15598:1;15593:3;15589:11;15582:49;15659:2;15654:3;15650:12;15643:19;;15488:180;;;:::o;15677:326::-;;15837:67;15901:2;15896:3;15837:67;:::i;:::-;15830:74;;15937:28;15933:1;15928:3;15924:11;15917:49;15994:2;15989:3;15985:12;15978:19;;15823:180;;;:::o;16012:370::-;;16172:67;16236:2;16231:3;16172:67;:::i;:::-;16165:74;;16272:34;16268:1;16263:3;16259:11;16252:55;16341:3;16336:2;16331:3;16327:12;16320:25;16373:2;16368:3;16364:12;16357:19;;16158:224;;;:::o;16391:318::-;;16551:67;16615:2;16610:3;16551:67;:::i;:::-;16544:74;;16651:20;16647:1;16642:3;16638:11;16631:41;16700:2;16695:3;16691:12;16684:19;;16537:172;;;:::o;16718:390::-;;16878:67;16942:2;16937:3;16878:67;:::i;:::-;16871:74;;16978:34;16974:1;16969:3;16965:11;16958:55;17047:23;17042:2;17037:3;17033:12;17026:45;17099:2;17094:3;17090:12;17083:19;;16864:244;;;:::o;17117:330::-;;17277:67;17341:2;17336:3;17277:67;:::i;:::-;17270:74;;17377:32;17373:1;17368:3;17364:11;17357:53;17438:2;17433:3;17429:12;17422:19;;17263:184;;;:::o;17456:312::-;;17616:67;17680:2;17675:3;17616:67;:::i;:::-;17609:74;;17716:14;17712:1;17707:3;17703:11;17696:35;17759:2;17754:3;17750:12;17743:19;;17602:166;;;:::o;17777:323::-;;17937:67;18001:2;17996:3;17937:67;:::i;:::-;17930:74;;18037:25;18033:1;18028:3;18024:11;18017:46;18091:2;18086:3;18082:12;18075:19;;17923:177;;;:::o;18109:324::-;;18269:67;18333:2;18328:3;18269:67;:::i;:::-;18262:74;;18369:26;18365:1;18360:3;18356:11;18349:47;18424:2;18419:3;18415:12;18408:19;;18255:178;;;:::o;18442:325::-;;18602:67;18666:2;18661:3;18602:67;:::i;:::-;18595:74;;18702:27;18698:1;18693:3;18689:11;18682:48;18758:2;18753:3;18749:12;18742:19;;18588:179;;;:::o;18776:330::-;;18936:67;19000:2;18995:3;18936:67;:::i;:::-;18929:74;;19036:32;19032:1;19027:3;19023:11;19016:53;19097:2;19092:3;19088:12;19081:19;;18922:184;;;:::o;19115:379::-;;19275:67;19339:2;19334:3;19275:67;:::i;:::-;19268:74;;19375:34;19371:1;19366:3;19362:11;19355:55;19444:12;19439:2;19434:3;19430:12;19423:34;19485:2;19480:3;19476:12;19469:19;;19261:233;;;:::o;19503:331::-;;19663:67;19727:2;19722:3;19663:67;:::i;:::-;19656:74;;19763:33;19759:1;19754:3;19750:11;19743:54;19825:2;19820:3;19816:12;19809:19;;19649:185;;;:::o;19843:318::-;;20003:67;20067:2;20062:3;20003:67;:::i;:::-;19996:74;;20103:20;20099:1;20094:3;20090:11;20083:41;20152:2;20147:3;20143:12;20136:19;;19989:172;;;:::o;20170:331::-;;20330:67;20394:2;20389:3;20330:67;:::i;:::-;20323:74;;20430:33;20426:1;20421:3;20417:11;20410:54;20492:2;20487:3;20483:12;20476:19;;20316:185;;;:::o;20590:2294::-;20737:6;20732:3;20728:16;20825:4;20818:5;20814:16;20808:23;20837:63;20894:4;20889:3;20885:14;20871:12;20837:63;:::i;:::-;20759:147;20985:4;20978:5;20974:16;20968:23;20997:63;21054:4;21049:3;21045:14;21031:12;20997:63;:::i;:::-;20916:150;21140:4;21133:5;21129:16;21123:23;21152:71;21217:4;21212:3;21208:14;21194:12;21152:71;:::i;:::-;21076:153;21313:4;21306:5;21302:16;21296:23;21325:63;21382:4;21377:3;21373:14;21359:12;21325:63;:::i;:::-;21239:155;21480:4;21473:5;21469:16;21463:23;21492:115;21601:4;21596:3;21592:14;21578:12;21492:115;:::i;:::-;21404:209;21698:4;21691:5;21687:16;21681:23;21710:115;21819:4;21814:3;21810:14;21796:12;21710:115;:::i;:::-;21623:208;21920:4;21913:5;21909:16;21903:23;21932:115;22041:4;22036:3;22032:14;22018:12;21932:115;:::i;:::-;21841:212;22139:4;22132:5;22128:16;22122:23;22151:115;22260:4;22255:3;22251:14;22237:12;22151:115;:::i;:::-;22063:209;22349:6;22342:5;22338:18;22332:25;22363:65;22420:6;22415:3;22411:16;22397:12;22363:65;:::i;:::-;22282:152;22518:6;22511:5;22507:18;22501:25;22532:117;22641:6;22636:3;22632:16;22618:12;22532:117;:::i;:::-;22444:211;22732:6;22725:5;22721:18;22715:25;22746:117;22855:6;22850:3;22846:16;22832:12;22746:117;:::i;:::-;22665:204;20710:2174;;;:::o;22964:1469::-;23113:4;23108:3;23104:14;23204:4;23197:5;23193:16;23187:23;23216:115;23325:4;23320:3;23316:14;23302:12;23216:115;:::i;:::-;23133:204;23421:4;23414:5;23410:16;23404:23;23433:115;23542:4;23537:3;23533:14;23519:12;23433:115;:::i;:::-;23347:207;23636:4;23629:5;23625:16;23619:23;23648:115;23757:4;23752:3;23748:14;23734:12;23648:115;:::i;:::-;23564:205;23851:4;23844:5;23840:16;23834:23;23863:115;23972:4;23967:3;23963:14;23949:12;23863:115;:::i;:::-;23779:205;24069:4;24062:5;24058:16;24052:23;24081:115;24190:4;24185:3;24181:14;24167:12;24081:115;:::i;:::-;23994:208;24285:4;24278:5;24274:16;24268:23;24297:115;24406:4;24401:3;24397:14;24383:12;24297:115;:::i;:::-;24212:206;23086:1347;;;:::o;24503:318::-;24638:4;24633:3;24629:14;24725:4;24718:5;24714:16;24708:23;24737:63;24794:4;24789:3;24785:14;24771:12;24737:63;:::i;:::-;24658:148;24611:210;;;:::o;24891:328::-;25036:4;25031:3;25027:14;25123:4;25116:5;25112:16;25106:23;25135:63;25192:4;25187:3;25183:14;25169:12;25135:63;:::i;:::-;25056:148;25009:210;;;:::o;25289:411::-;25431:4;25426:3;25422:14;25458:1;25523:4;25516:5;25512:16;25506:23;25493:36;;25555:55;25600:9;25555:55;:::i;:::-;25616:63;25673:4;25668:3;25664:14;25650:12;25616:63;:::i;:::-;25469:216;25404:296;;;;:::o;25707:103::-;25780:24;25798:5;25780:24;:::i;:::-;25775:3;25768:37;25762:48;;:::o;25817:113::-;25900:24;25918:5;25900:24;:::i;:::-;25895:3;25888:37;25882:48;;:::o;25937:107::-;26016:22;26032:5;26016:22;:::i;:::-;26011:3;26004:35;25998:46;;:::o;26051:253::-;;26179:75;26250:3;26241:6;26179:75;:::i;:::-;26276:2;26271:3;26267:12;26260:19;;26296:3;26289:10;;26167:137;;;;:::o;26311:271::-;;26464:93;26553:3;26544:6;26464:93;:::i;:::-;26457:100;;26574:3;26567:10;;26445:137;;;;:::o;26589:222::-;;26716:2;26705:9;26701:18;26693:26;;26730:71;26798:1;26787:9;26783:17;26774:6;26730:71;:::i;:::-;26687:124;;;;:::o;26818:238::-;;26953:2;26942:9;26938:18;26930:26;;26967:79;27043:1;27032:9;27028:17;27019:6;26967:79;:::i;:::-;26924:132;;;;:::o;27063:349::-;;27226:2;27215:9;27211:18;27203:26;;27240:79;27316:1;27305:9;27301:17;27292:6;27240:79;:::i;:::-;27330:72;27398:2;27387:9;27383:18;27374:6;27330:72;:::i;:::-;27197:215;;;;;:::o;27419:333::-;;27574:2;27563:9;27559:18;27551:26;;27588:71;27656:1;27645:9;27641:17;27632:6;27588:71;:::i;:::-;27670:72;27738:2;27727:9;27723:18;27714:6;27670:72;:::i;:::-;27545:207;;;;;:::o;27759:1982::-;;28487:3;28476:9;28472:19;28464:27;;28502:71;28570:1;28559:9;28555:17;28546:6;28502:71;:::i;:::-;28584:72;28652:2;28641:9;28637:18;28628:6;28584:72;:::i;:::-;28667:80;28743:2;28732:9;28728:18;28719:6;28667:80;:::i;:::-;28758:72;28826:2;28815:9;28811:18;28802:6;28758:72;:::i;:::-;28841:125;28961:3;28950:9;28946:19;28937:6;28841:125;:::i;:::-;28977;29097:3;29086:9;29082:19;29073:6;28977:125;:::i;:::-;29113;29233:3;29222:9;29218:19;29209:6;29113:125;:::i;:::-;29249;29369:3;29358:9;29354:19;29345:6;29249:125;:::i;:::-;29385:73;29453:3;29442:9;29438:19;29429:6;29385:73;:::i;:::-;29469:125;29589:3;29578:9;29574:19;29565:6;29469:125;:::i;:::-;29605:126;29726:3;29715:9;29711:19;29701:7;29605:126;:::i;:::-;28458:1283;;;;;;;;;;;;;;:::o;29748:444::-;;29931:2;29920:9;29916:18;29908:26;;29945:71;30013:1;30002:9;29998:17;29989:6;29945:71;:::i;:::-;30027:72;30095:2;30084:9;30080:18;30071:6;30027:72;:::i;:::-;30110;30178:2;30167:9;30163:18;30154:6;30110:72;:::i;:::-;29902:290;;;;;;:::o;30199:640::-;;30428:3;30417:9;30413:19;30405:27;;30443:71;30511:1;30500:9;30496:17;30487:6;30443:71;:::i;:::-;30525:72;30593:2;30582:9;30578:18;30569:6;30525:72;:::i;:::-;30608;30676:2;30665:9;30661:18;30652:6;30608:72;:::i;:::-;30728:9;30722:4;30718:20;30713:2;30702:9;30698:18;30691:48;30753:76;30824:4;30815:6;30753:76;:::i;:::-;30745:84;;30399:440;;;;;;;:::o;30846:437::-;;31053:2;31042:9;31038:18;31030:26;;31067:71;31135:1;31124:9;31120:17;31111:6;31067:71;:::i;:::-;31149:124;31269:2;31258:9;31254:18;31245:6;31149:124;:::i;:::-;31024:259;;;;;:::o;31290:333::-;;31445:2;31434:9;31430:18;31422:26;;31459:71;31527:1;31516:9;31512:17;31503:6;31459:71;:::i;:::-;31541:72;31609:2;31598:9;31594:18;31585:6;31541:72;:::i;:::-;31416:207;;;;;:::o;31630:432::-;;31807:2;31796:9;31792:18;31784:26;;31821:71;31889:1;31878:9;31874:17;31865:6;31821:71;:::i;:::-;31903:72;31971:2;31960:9;31956:18;31947:6;31903:72;:::i;:::-;31986:66;32048:2;32037:9;32033:18;32024:6;31986:66;:::i;:::-;31778:284;;;;;;:::o;32069:498::-;;32310:2;32299:9;32295:18;32287:26;;32360:9;32354:4;32350:20;32346:1;32335:9;32331:17;32324:47;32385:172;32552:4;32543:6;32385:172;:::i;:::-;32377:180;;32281:286;;;;:::o;32574:222::-;;32701:2;32690:9;32686:18;32678:26;;32715:71;32783:1;32772:9;32768:17;32759:6;32715:71;:::i;:::-;32672:124;;;;:::o;32803:333::-;;32958:2;32947:9;32943:18;32935:26;;32972:71;33040:1;33029:9;33025:17;33016:6;32972:71;:::i;:::-;33054:72;33122:2;33111:9;33107:18;33098:6;33054:72;:::i;:::-;32929:207;;;;;:::o;33143:528::-;;33344:2;33333:9;33329:18;33321:26;;33358:71;33426:1;33415:9;33411:17;33402:6;33358:71;:::i;:::-;33440:72;33508:2;33497:9;33493:18;33484:6;33440:72;:::i;:::-;33560:9;33554:4;33550:20;33545:2;33534:9;33530:18;33523:48;33585:76;33656:4;33647:6;33585:76;:::i;:::-;33577:84;;33315:356;;;;;;:::o;33678:782::-;;33950:3;33939:9;33935:19;33927:27;;33965:71;34033:1;34022:9;34018:17;34009:6;33965:71;:::i;:::-;34047:72;34115:2;34104:9;34100:18;34091:6;34047:72;:::i;:::-;34167:9;34161:4;34157:20;34152:2;34141:9;34137:18;34130:48;34192:76;34263:4;34254:6;34192:76;:::i;:::-;34184:84;;34279:87;34362:2;34351:9;34347:18;34338:6;34279:87;:::i;:::-;34377:73;34445:3;34434:9;34430:19;34421:6;34377:73;:::i;:::-;33921:539;;;;;;;;:::o;34467:268::-;;34617:2;34606:9;34602:18;34594:26;;34631:94;34722:1;34711:9;34707:17;34698:6;34631:94;:::i;:::-;34588:147;;;;:::o;34742:286::-;;34901:2;34890:9;34886:18;34878:26;;34915:103;35015:1;35004:9;35000:17;34991:6;34915:103;:::i;:::-;34872:156;;;;:::o;35035:270::-;;35186:2;35175:9;35171:18;35163:26;;35200:95;35292:1;35281:9;35277:17;35268:6;35200:95;:::i;:::-;35157:148;;;;:::o;35312:252::-;;35454:2;35443:9;35439:18;35431:26;;35468:86;35551:1;35540:9;35536:17;35527:6;35468:86;:::i;:::-;35425:139;;;;:::o;35571:254::-;;35714:2;35703:9;35699:18;35691:26;;35728:87;35812:1;35801:9;35797:17;35788:6;35728:87;:::i;:::-;35685:140;;;;:::o;35832:310::-;;35979:2;35968:9;35964:18;35956:26;;36029:9;36023:4;36019:20;36015:1;36004:9;36000:17;35993:47;36054:78;36127:4;36118:6;36054:78;:::i;:::-;36046:86;;35950:192;;;;:::o;36149:416::-;;36349:2;36338:9;36334:18;36326:26;;36399:9;36393:4;36389:20;36385:1;36374:9;36370:17;36363:47;36424:131;36550:4;36424:131;:::i;:::-;36416:139;;36320:245;;;:::o;36572:416::-;;36772:2;36761:9;36757:18;36749:26;;36822:9;36816:4;36812:20;36808:1;36797:9;36793:17;36786:47;36847:131;36973:4;36847:131;:::i;:::-;36839:139;;36743:245;;;:::o;36995:416::-;;37195:2;37184:9;37180:18;37172:26;;37245:9;37239:4;37235:20;37231:1;37220:9;37216:17;37209:47;37270:131;37396:4;37270:131;:::i;:::-;37262:139;;37166:245;;;:::o;37418:416::-;;37618:2;37607:9;37603:18;37595:26;;37668:9;37662:4;37658:20;37654:1;37643:9;37639:17;37632:47;37693:131;37819:4;37693:131;:::i;:::-;37685:139;;37589:245;;;:::o;37841:416::-;;38041:2;38030:9;38026:18;38018:26;;38091:9;38085:4;38081:20;38077:1;38066:9;38062:17;38055:47;38116:131;38242:4;38116:131;:::i;:::-;38108:139;;38012:245;;;:::o;38264:416::-;;38464:2;38453:9;38449:18;38441:26;;38514:9;38508:4;38504:20;38500:1;38489:9;38485:17;38478:47;38539:131;38665:4;38539:131;:::i;:::-;38531:139;;38435:245;;;:::o;38687:416::-;;38887:2;38876:9;38872:18;38864:26;;38937:9;38931:4;38927:20;38923:1;38912:9;38908:17;38901:47;38962:131;39088:4;38962:131;:::i;:::-;38954:139;;38858:245;;;:::o;39110:416::-;;39310:2;39299:9;39295:18;39287:26;;39360:9;39354:4;39350:20;39346:1;39335:9;39331:17;39324:47;39385:131;39511:4;39385:131;:::i;:::-;39377:139;;39281:245;;;:::o;39533:416::-;;39733:2;39722:9;39718:18;39710:26;;39783:9;39777:4;39773:20;39769:1;39758:9;39754:17;39747:47;39808:131;39934:4;39808:131;:::i;:::-;39800:139;;39704:245;;;:::o;39956:416::-;;40156:2;40145:9;40141:18;40133:26;;40206:9;40200:4;40196:20;40192:1;40181:9;40177:17;40170:47;40231:131;40357:4;40231:131;:::i;:::-;40223:139;;40127:245;;;:::o;40379:416::-;;40579:2;40568:9;40564:18;40556:26;;40629:9;40623:4;40619:20;40615:1;40604:9;40600:17;40593:47;40654:131;40780:4;40654:131;:::i;:::-;40646:139;;40550:245;;;:::o;40802:416::-;;41002:2;40991:9;40987:18;40979:26;;41052:9;41046:4;41042:20;41038:1;41027:9;41023:17;41016:47;41077:131;41203:4;41077:131;:::i;:::-;41069:139;;40973:245;;;:::o;41225:416::-;;41425:2;41414:9;41410:18;41402:26;;41475:9;41469:4;41465:20;41461:1;41450:9;41446:17;41439:47;41500:131;41626:4;41500:131;:::i;:::-;41492:139;;41396:245;;;:::o;41648:416::-;;41848:2;41837:9;41833:18;41825:26;;41898:9;41892:4;41888:20;41884:1;41873:9;41869:17;41862:47;41923:131;42049:4;41923:131;:::i;:::-;41915:139;;41819:245;;;:::o;42071:416::-;;42271:2;42260:9;42256:18;42248:26;;42321:9;42315:4;42311:20;42307:1;42296:9;42292:17;42285:47;42346:131;42472:4;42346:131;:::i;:::-;42338:139;;42242:245;;;:::o;42494:416::-;;42694:2;42683:9;42679:18;42671:26;;42744:9;42738:4;42734:20;42730:1;42719:9;42715:17;42708:47;42769:131;42895:4;42769:131;:::i;:::-;42761:139;;42665:245;;;:::o;42917:416::-;;43117:2;43106:9;43102:18;43094:26;;43167:9;43161:4;43157:20;43153:1;43142:9;43138:17;43131:47;43192:131;43318:4;43192:131;:::i;:::-;43184:139;;43088:245;;;:::o;43340:416::-;;43540:2;43529:9;43525:18;43517:26;;43590:9;43584:4;43580:20;43576:1;43565:9;43561:17;43554:47;43615:131;43741:4;43615:131;:::i;:::-;43607:139;;43511:245;;;:::o;43763:416::-;;43963:2;43952:9;43948:18;43940:26;;44013:9;44007:4;44003:20;43999:1;43988:9;43984:17;43977:47;44038:131;44164:4;44038:131;:::i;:::-;44030:139;;43934:245;;;:::o;44186:416::-;;44386:2;44375:9;44371:18;44363:26;;44436:9;44430:4;44426:20;44422:1;44411:9;44407:17;44400:47;44461:131;44587:4;44461:131;:::i;:::-;44453:139;;44357:245;;;:::o;44609:416::-;;44809:2;44798:9;44794:18;44786:26;;44859:9;44853:4;44849:20;44845:1;44834:9;44830:17;44823:47;44884:131;45010:4;44884:131;:::i;:::-;44876:139;;44780:245;;;:::o;45032:416::-;;45232:2;45221:9;45217:18;45209:26;;45282:9;45276:4;45272:20;45268:1;45257:9;45253:17;45246:47;45307:131;45433:4;45307:131;:::i;:::-;45299:139;;45203:245;;;:::o;45455:416::-;;45655:2;45644:9;45640:18;45632:26;;45705:9;45699:4;45695:20;45691:1;45680:9;45676:17;45669:47;45730:131;45856:4;45730:131;:::i;:::-;45722:139;;45626:245;;;:::o;45878:335::-;;46061:3;46050:9;46046:19;46038:27;;46076:127;46200:1;46189:9;46185:17;46176:6;46076:127;:::i;:::-;46032:181;;;;:::o;46220:326::-;;46399:2;46388:9;46384:18;46376:26;;46413:123;46533:1;46522:9;46518:17;46509:6;46413:123;:::i;:::-;46370:176;;;;:::o;46553:756::-;;46892:2;46881:9;46877:18;46869:26;;46906:123;47026:1;47015:9;47011:17;47002:6;46906:123;:::i;:::-;47040:124;47160:2;47149:9;47145:18;47136:6;47040:124;:::i;:::-;47175;47295:2;47284:9;47280:18;47271:6;47175:124;:::i;:::-;46863:446;;;;;;:::o;47316:535::-;;47572:2;47561:9;47557:18;47549:26;;47586:123;47706:1;47695:9;47691:17;47682:6;47586:123;:::i;:::-;47720:121;47837:2;47826:9;47822:18;47813:6;47720:121;:::i;:::-;47543:308;;;;;:::o;47858:437::-;;48065:2;48054:9;48050:18;48042:26;;48079:123;48199:1;48188:9;48184:17;48175:6;48079:123;:::i;:::-;48213:72;48281:2;48270:9;48266:18;48257:6;48213:72;:::i;:::-;48036:259;;;;;:::o;48302:980::-;;48697:3;48686:9;48682:19;48674:27;;48712:123;48832:1;48821:9;48817:17;48808:6;48712:123;:::i;:::-;48846:72;48914:2;48903:9;48899:18;48890:6;48846:72;:::i;:::-;48929:124;49049:2;49038:9;49034:18;49025:6;48929:124;:::i;:::-;49064;49184:2;49173:9;49169:18;49160:6;49064:124;:::i;:::-;49199:73;49267:3;49256:9;49252:19;49243:6;49199:73;:::i;:::-;48668:614;;;;;;;;:::o;49289:222::-;;49416:2;49405:9;49401:18;49393:26;;49430:71;49498:1;49487:9;49483:17;49474:6;49430:71;:::i;:::-;49387:124;;;;:::o;49518:652::-;;49805:2;49794:9;49790:18;49782:26;;49819:71;49887:1;49876:9;49872:17;49863:6;49819:71;:::i;:::-;49901:124;50021:2;50010:9;50006:18;49997:6;49901:124;:::i;:::-;50036;50156:2;50145:9;50141:18;50132:6;50036:124;:::i;:::-;49776:394;;;;;;:::o;50177:333::-;;50332:2;50321:9;50317:18;50309:26;;50346:71;50414:1;50403:9;50399:17;50390:6;50346:71;:::i;:::-;50428:72;50496:2;50485:9;50481:18;50472:6;50428:72;:::i;:::-;50303:207;;;;;:::o;50517:548::-;;50752:2;50741:9;50737:18;50729:26;;50766:71;50834:1;50823:9;50819:17;50810:6;50766:71;:::i;:::-;50848:72;50916:2;50905:9;50901:18;50892:6;50848:72;:::i;:::-;50931:124;51051:2;51040:9;51036:18;51027:6;50931:124;:::i;:::-;50723:342;;;;;;:::o;51072:556::-;;51283:3;51272:9;51268:19;51260:27;;51298:71;51366:1;51355:9;51351:17;51342:6;51298:71;:::i;:::-;51380:72;51448:2;51437:9;51433:18;51424:6;51380:72;:::i;:::-;51463;51531:2;51520:9;51516:18;51507:6;51463:72;:::i;:::-;51546;51614:2;51603:9;51599:18;51590:6;51546:72;:::i;:::-;51254:374;;;;;;;:::o;51635:214::-;;51758:2;51747:9;51743:18;51735:26;;51772:67;51836:1;51825:9;51821:17;51812:6;51772:67;:::i;:::-;51729:120;;;;:::o;51856:256::-;;51918:2;51912:9;51902:19;;51956:4;51948:6;51944:17;52055:6;52043:10;52040:22;52019:18;52007:10;52004:34;52001:62;51998:2;;;52076:1;52073;52066:12;51998:2;52096:10;52092:2;52085:22;51896:216;;;;:::o;52119:183::-;;52237:3;52229:11;;52275:4;52270:3;52266:14;52258:22;;52223:79;;;:::o;52309:169::-;;52450:5;52444:12;52434:22;;52415:63;;;:::o;52485:121::-;;52578:5;52572:12;52562:22;;52543:63;;;:::o;52613:122::-;;52707:5;52701:12;52691:22;;52672:63;;;:::o;52742:140::-;;52872:4;52867:3;52863:14;52855:22;;52849:33;;;:::o;52890:210::-;;53052:6;53047:3;53040:19;53089:4;53084:3;53080:14;53065:29;;53033:67;;;;:::o;53109:162::-;;53223:6;53218:3;53211:19;53260:4;53255:3;53251:14;53236:29;;53204:67;;;;:::o;53280:144::-;;53415:3;53400:18;;53393:31;;;;:::o;53433:163::-;;53548:6;53543:3;53536:19;53585:4;53580:3;53576:14;53561:29;;53529:67;;;;:::o;53604:85::-;;53679:5;53668:16;;53662:27;;;:::o;53696:91::-;;53758:24;53776:5;53758:24;:::i;:::-;53747:35;;53741:46;;;:::o;53794:85::-;;53867:5;53860:13;53853:21;53842:32;;53836:43;;;:::o;53886:72::-;;53948:5;53937:16;;53931:27;;;:::o;53965:142::-;;54045:5;54034:16;;54051:51;54096:5;54051:51;:::i;:::-;54028:79;;;:::o;54114:126::-;;54186:5;54175:16;;54192:43;54229:5;54192:43;:::i;:::-;54169:71;;;:::o;54247:::-;;54308:5;54297:16;;54291:27;;;:::o;54325:121::-;;54398:42;54391:5;54387:54;54376:65;;54370:76;;;:::o;54453:72::-;;54515:5;54504:16;;54498:27;;;:::o;54532:81::-;;54603:4;54596:5;54592:16;54581:27;;54575:38;;;:::o;54620:129::-;;54707:37;54738:5;54707:37;:::i;:::-;54694:50;;54688:61;;;:::o;54756:167::-;;54858:60;54912:5;54858:60;:::i;:::-;54845:73;;54839:84;;;:::o;54930:131::-;;55032:24;55050:5;55032:24;:::i;:::-;55019:37;;55013:48;;;:::o;55068:185::-;;55179:69;55242:5;55179:69;:::i;:::-;55166:82;;55160:93;;;:::o;55260:140::-;;55371:24;55389:5;55371:24;:::i;:::-;55358:37;;55352:48;;;:::o;55407:169::-;;55510:61;55565:5;55510:61;:::i;:::-;55497:74;;55491:85;;;:::o;55583:132::-;;55686:24;55704:5;55686:24;:::i;:::-;55673:37;;55667:48;;;:::o;55722:151::-;;55816:52;55862:5;55816:52;:::i;:::-;55803:65;;55797:76;;;:::o;55880:123::-;;55974:24;55992:5;55974:24;:::i;:::-;55961:37;;55955:48;;;:::o;56010:142::-;;56105:42;56141:5;56105:42;:::i;:::-;56092:55;;56086:66;;;:::o;56159:126::-;;56246:34;56274:5;56246:34;:::i;:::-;56233:47;;56227:58;;;:::o;56292:121::-;;56371:37;56402:5;56371:37;:::i;:::-;56358:50;;56352:61;;;:::o;56420:108::-;;56499:24;56517:5;56499:24;:::i;:::-;56486:37;;56480:48;;;:::o;56536:268::-;56601:1;56608:101;56622:6;56619:1;56616:13;56608:101;;;56698:1;56693:3;56689:11;56683:18;56679:1;56674:3;56670:11;56663:39;56644:2;56641:1;56637:10;56632:15;;56608:101;;;56724:6;56721:1;56718:13;56715:2;;;56789:1;56780:6;56775:3;56771:16;56764:27;56715:2;56585:219;;;;:::o;56812:161::-;;56902:66;56933:34;56956:10;56933:34;:::i;:::-;56902:66;:::i;:::-;56893:75;;56887:86;;;:::o;56980:95::-;;57044:26;57064:5;57044:26;:::i;:::-;57033:37;;57027:48;;;:::o;57082:89::-;;57146:20;57160:5;57146:20;:::i;:::-;57135:31;;57129:42;;;:::o;57178:97::-;;57266:2;57262:7;57257:2;57250:5;57246:14;57242:28;57232:38;;57226:49;;;:::o;57283:94::-;;57361:5;57357:2;57353:14;57331:36;;57325:52;;;:::o;57385:102::-;;57471:5;57468:1;57464:13;57442:35;;57436:51;;;:::o;57495:109::-;57582:1;57575:5;57572:12;57562:2;;57588:9;57562:2;57556:48;:::o;57611:101::-;57690:1;57683:5;57680:12;57670:2;;57696:9;57670:2;57664:48;:::o;57719:117::-;57788:24;57806:5;57788:24;:::i;:::-;57781:5;57778:35;57768:2;;57827:1;57824;57817:12;57768:2;57762:74;:::o;57843:111::-;57909:21;57924:5;57909:21;:::i;:::-;57902:5;57899:32;57889:2;;57945:1;57942;57935:12;57889:2;57883:71;:::o;57961:117::-;58030:24;58048:5;58030:24;:::i;:::-;58023:5;58020:35;58010:2;;58069:1;58066;58059:12;58010:2;58004:74;:::o;58085:115::-;58153:23;58170:5;58153:23;:::i;:::-;58146:5;58143:34;58133:2;;58191:1;58188;58181:12;58133:2;58127:73;:::o;58207:117::-;58276:24;58294:5;58276:24;:::i;:::-;58269:5;58266:35;58256:2;;58315:1;58312;58305:12;58256:2;58250:74;:::o;58331:113::-;58398:22;58414:5;58398:22;:::i;:::-;58391:5;58388:33;58378:2;;58435:1;58432;58425:12;58378:2;58372:72;:::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Liquidatable.sol\";\n\n/**\n * @title Expiring Multi Party.\n * @notice Convenient wrapper for Liquidatable.\n */\ncontract ExpiringMultiParty is Liquidatable {\n    /**\n     * @notice Constructs the ExpiringMultiParty contract.\n     * @param params struct to define input parameters for construction of Liquidatable. Some params\n     * are fed directly into the PricelessPositionManager's constructor within the inheritance tree.\n     */\n    constructor(ConstructorParams memory params)\n        public\n        Liquidatable(params)\n    // Note: since there is no logic here, there is no need to add a re-entrancy guard.\n    {\n\n    }\n}\n",
  "sourcePath": "/Users/meir/Desktop/prelaunch/variable-expiring-multiparty/contracts/ExpiringMultiParty.sol",
  "ast": {
    "absolutePath": "/Users/meir/Desktop/prelaunch/variable-expiring-multiparty/contracts/ExpiringMultiParty.sol",
    "exportedSymbols": {
      "ExpiringMultiParty": [
        17
      ]
    },
    "id": 18,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "absolutePath": "/Users/meir/Desktop/prelaunch/variable-expiring-multiparty/contracts/Liquidatable.sol",
        "file": "./Liquidatable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 18,
        "sourceUnit": 1703,
        "src": "101:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "Liquidatable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1702,
              "src": "250:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Liquidatable_$1702",
                "typeString": "contract Liquidatable"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "250:12:0"
          }
        ],
        "contractDependencies": [
          1702,
          4052,
          7401,
          8081,
          8870,
          9731
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4,
          "nodeType": "StructuredDocumentation",
          "src": "131:87:0",
          "text": " @title Expiring Multi Party.\n @notice Convenient wrapper for Liquidatable."
        },
        "fullyImplemented": true,
        "id": 17,
        "linearizedBaseContracts": [
          17,
          1702,
          4052,
          8870,
          7401,
          8081,
          9731
        ],
        "name": "ExpiringMultiParty",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "727:8:0",
              "statements": []
            },
            "documentation": {
              "id": 7,
              "nodeType": "StructuredDocumentation",
              "src": "269:272:0",
              "text": " @notice Constructs the ExpiringMultiParty contract.\n @param params struct to define input parameters for construction of Liquidatable. Some params\n are fed directly into the PricelessPositionManager's constructor within the inheritance tree."
            },
            "id": 16,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12,
                    "name": "params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "627:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$490_memory_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams memory"
                    }
                  }
                ],
                "id": 13,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11,
                  "name": "Liquidatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1702,
                  "src": "614:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Liquidatable_$1702_$",
                    "typeString": "type(contract Liquidatable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "614:20:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16,
                  "src": "558:31:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConstructorParams_$490_memory_ptr",
                    "typeString": "struct Liquidatable.ConstructorParams"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8,
                    "name": "ConstructorParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 490,
                    "src": "558:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$490_storage_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "557:33:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:0:0"
            },
            "scope": 17,
            "src": "546:189:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 18,
        "src": "219:518:0"
      }
    ],
    "src": "42:696:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/meir/Desktop/prelaunch/variable-expiring-multiparty/contracts/ExpiringMultiParty.sol",
      "exportedSymbols": {
        "ExpiringMultiParty": [
          17
        ]
      },
      "license": "AGPL-3.0-only"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "42:23:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 1703,
          "absolutePath": "/Users/meir/Desktop/prelaunch/variable-expiring-multiparty/contracts/Liquidatable.sol",
          "file": "./Liquidatable.sol",
          "scope": 18,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "101:28:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1702,
            4052,
            7401,
            8081,
            8870,
            9731
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            17,
            1702,
            4052,
            8870,
            7401,
            8081,
            9731
          ],
          "name": "ExpiringMultiParty",
          "scope": 18
        },
        "children": [
          {
            "attributes": {
              "text": " @title Expiring Multi Party.\n @notice Convenient wrapper for Liquidatable."
            },
            "id": 4,
            "name": "StructuredDocumentation",
            "src": "131:87:0"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Liquidatable",
                  "referencedDeclaration": 1702,
                  "type": "contract Liquidatable"
                },
                "id": 5,
                "name": "UserDefinedTypeName",
                "src": "250:12:0"
              }
            ],
            "id": 6,
            "name": "InheritanceSpecifier",
            "src": "250:12:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 17,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Constructs the ExpiringMultiParty contract.\n @param params struct to define input parameters for construction of Liquidatable. Some params\n are fed directly into the PricelessPositionManager's constructor within the inheritance tree."
                },
                "id": 7,
                "name": "StructuredDocumentation",
                "src": "269:272:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "params",
                      "overrides": null,
                      "scope": 16,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Liquidatable.ConstructorParams",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "ConstructorParams",
                          "referencedDeclaration": 490,
                          "type": "struct Liquidatable.ConstructorParams"
                        },
                        "id": 8,
                        "name": "UserDefinedTypeName",
                        "src": "558:17:0"
                      }
                    ],
                    "id": 9,
                    "name": "VariableDeclaration",
                    "src": "558:31:0"
                  }
                ],
                "id": 10,
                "name": "ParameterList",
                "src": "557:33:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 14,
                "name": "ParameterList",
                "src": "727:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1702,
                      "type": "type(contract Liquidatable)",
                      "value": "Liquidatable"
                    },
                    "id": 11,
                    "name": "Identifier",
                    "src": "614:12:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9,
                      "type": "struct Liquidatable.ConstructorParams memory",
                      "value": "params"
                    },
                    "id": 12,
                    "name": "Identifier",
                    "src": "627:6:0"
                  }
                ],
                "id": 13,
                "name": "ModifierInvocation",
                "src": "614:20:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 15,
                "name": "Block",
                "src": "727:8:0"
              }
            ],
            "id": 16,
            "name": "FunctionDefinition",
            "src": "546:189:0"
          }
        ],
        "id": 17,
        "name": "ContractDefinition",
        "src": "219:518:0"
      }
    ],
    "id": 18,
    "name": "SourceUnit",
    "src": "42:696:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-04-26T04:04:51.346Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "params": "struct to define input parameters for construction of Liquidatable. Some params are fed directly into the PricelessPositionManager's constructor within the inheritance tree."
        }
      },
      "create((uint256),(uint256))": {
        "details": "Reverts if minting these tokens would put the position's collateralization ratio below the global collateralization ratio. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.This contract must have the Minter role for the `tokenCurrency`.",
        "params": {
          "collateralAmount": "is the number of collateral tokens to collateralize the position with",
          "numTokens": "is the number of tokens to mint from the position."
        }
      },
      "createLiquidation(address,(uint256),(uint256),(uint256),uint256)": {
        "details": "This method generates an ID that will uniquely identify liquidation for the sponsor. This contract must be approved to spend at least `tokensLiquidated` of `tokenCurrency` and at least `finalFeeBond` of `collateralCurrency`.This contract must have the Burner role for the `tokenCurrency`.",
        "params": {
          "deadline": "abort the liquidation if the transaction is mined after this timestamp.",
          "maxCollateralPerToken": "abort the liquidation if the position's collateral per token exceeds this value.",
          "maxTokensToLiquidate": "max number of tokens to liquidate.",
          "minCollateralPerToken": "abort the liquidation if the position's collateral per token is below this value.",
          "sponsor": "address of the sponsor to liquidate."
        },
        "returns": {
          "finalFeeBond": "amount of collateral to be posted by liquidator and returned if not disputed successfully.",
          "liquidationId": "ID of the newly created liquidation.",
          "tokensLiquidated": "amount of synthetic tokens removed and liquidated from the `sponsor`'s position."
        }
      },
      "deposit((uint256))": {
        "details": "Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.",
        "params": {
          "collateralAmount": "total amount of collateral tokens to be sent to the sponsor's position."
        }
      },
      "depositTo(address,(uint256))": {
        "details": "Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.",
        "params": {
          "collateralAmount": "total amount of collateral tokens to be sent to the sponsor's position.",
          "sponsor": "the sponsor to credit the deposit to."
        }
      },
      "dispute(uint256,address)": {
        "details": "Can only dispute a liquidation before the liquidation expires and if there are no other pending disputes. This contract must be approved to spend at least the dispute bond amount of `collateralCurrency`. This dispute bond amount is calculated from `disputeBondPercentage` times the collateral in the liquidation.",
        "params": {
          "liquidationId": "of the disputed liquidation.",
          "sponsor": "the address of the sponsor whose liquidation is being disputed."
        },
        "returns": {
          "totalPaid": "amount of collateral charged to disputer (i.e. final fee bond + dispute bond)."
        }
      },
      "emergencyShutdown()": {
        "details": "Only the governor can call this function as they are permissioned within the `FinancialContractAdmin`. Upon emergency shutdown, the contract settlement time is set to the shutdown time. This enables withdrawal to occur via the standard `settleExpired` function. Contract state is set to `ExpiredPriceRequested` which prevents re-entry into this function or the `expire` function. No fees are paid when calling `emergencyShutdown` as the governor who would call the function would also receive the fees."
      },
      "emergencyUpdateDAOAddress(address)": {
        "details": "Only the governor or authorized DAO can call this function. The new DAOAddress will be authorized to expire the contract, and the old address will be deauthorized."
      },
      "expire()": {
        "details": "this function can only be called once the contract is expired and can't be re-called."
      },
      "getCollateral(address)": {
        "details": "This is necessary because the struct returned by the positions() method shows rawCollateral, which isn't a user-readable value.This method accounts for pending regular fees that have not yet been withdrawn from this contract, for example if the `lastPaymentTime != currentTime`.",
        "params": {
          "sponsor": "address whose collateral amount is retrieved."
        },
        "returns": {
          "_0": "collateralAmount amount of collateral within a sponsors position."
        }
      },
      "getCurrentTime()": {
        "returns": {
          "_0": "uint for the current Testable timestamp."
        }
      },
      "getLiquidations(address)": {
        "params": {
          "sponsor": "address of the position sponsor."
        },
        "returns": {
          "liquidationData": "array of all liquidation information for the given sponsor address."
        }
      },
      "getOutstandingRegularFees(uint256)": {
        "details": "This returns 0 and exit early if there is no pfc, fees were already paid during the current block, or the fee rate is 0.",
        "returns": {
          "latePenalty": "outstanding unpaid late fee for being late in previous fee payments.",
          "regularFee": "outstanding unpaid regular fee.",
          "totalPaid": "Amount of collateral that the contract paid (sum of the amount paid to the Store and caller)."
        }
      },
      "gulp()": {
        "details": "Multiplying the `cumulativeFeeMultiplier` by the ratio of non-PfC-collateral :: PfC-collateral effectively pays all sponsors a pro-rata portion of the excess collateral.This will revert if PfC is 0 and this contract's collateral balance > 0."
      },
      "payRegularFees()": {
        "details": "These must be paid periodically for the life of the contract. If the contract has not paid its regular fee in a week or more then a late penalty is applied which is sent to the caller. If the amount of fees owed are greater than the pfc, then this will pay as much as possible from the available collateral. An event is only fired if the fees charged are greater than 0.",
        "returns": {
          "_0": "totalPaid Amount of collateral that the contract paid (sum of the amount paid to the Store and caller). This returns 0 and exit early if there is no pfc, fees were already paid during the current block, or the fee rate is 0."
        }
      },
      "pfc()": {
        "details": "This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.",
        "returns": {
          "_0": "pfc value for equal to the current profit from corruption denominated in collateral currency."
        }
      },
      "redeem((uint256))": {
        "details": "Can only be called by a token sponsor. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend at least `numTokens` of `tokenCurrency`.This contract must have the Burner role for the `tokenCurrency`.",
        "params": {
          "numTokens": "is the number of tokens to be burnt for a commensurate amount of collateral."
        },
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      },
      "remargin()": {
        "details": "This is supposed to be implemented by any contract that inherits `AdministrateeInterface` and callable only by the Governor contract. This method is therefore minimally implemented in this contract and does nothing."
      },
      "repay((uint256))": {
        "details": "Can only be called by token sponsor. This contract must be approved to spend `numTokens` of `tokenCurrency`.This contract must have the Burner role for the `tokenCurrency`.",
        "params": {
          "numTokens": "is the number of tokens to be burnt from the sponsor's debt position."
        }
      },
      "requestTransferPosition()": {
        "details": "The liveness length is the same as the withdrawal liveness."
      },
      "requestWithdrawal((uint256))": {
        "details": "The request will be pending for `withdrawalLiveness`, during which the position can be liquidated.",
        "params": {
          "collateralAmount": "the amount of collateral requested to withdraw"
        }
      },
      "setCurrentTime(uint256)": {
        "details": "Will revert if not running in test mode.",
        "params": {
          "time": "timestamp to set current Testable time to."
        }
      },
      "settleExpired()": {
        "details": "This burns all tokens from the caller of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend `tokenCurrency` at least up to the caller's full balance.This contract must have the Burner role for the `tokenCurrency`.",
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      },
      "totalPositionCollateral()": {
        "details": "This method accounts for pending regular fees that have not yet been withdrawn from this contract, for example if the `lastPaymentTime != currentTime`.",
        "returns": {
          "_0": "totalCollateral amount of all collateral within the Expiring Multi Party Contract."
        }
      },
      "transferPositionPassedRequest(address)": {
        "details": "Transferring positions can only occur if the recipient does not already have a position.",
        "params": {
          "newSponsorAddress": "is the address to which the position will be transferred."
        }
      },
      "transformCollateralRequirement((uint256))": {
        "details": "This method should never revert.",
        "params": {
          "price": "input price used as an input to transform the collateral requirement."
        },
        "returns": {
          "_0": "transformedCollateralRequirement collateral requirement with transformation applied to it."
        }
      },
      "transformPrice((uint256),uint256)": {
        "details": "This method should never revert.",
        "params": {
          "price": "input price to be transformed.",
          "requestTime": "timestamp the oraclePrice was requested at."
        },
        "returns": {
          "_0": "transformedPrice price with the transformation function applied to it."
        }
      },
      "transformPriceIdentifier(uint256)": {
        "details": "This method should never revert.",
        "params": {
          "requestTime": "timestamp the identifier is to be used at."
        },
        "returns": {
          "_0": "transformedPrice price with the transformation function applied to it."
        }
      },
      "variableExpiration(uint256)": {
        "details": "Only the governor or authorized DAO can call this function. Upon variable shutdown, the contract settlement time is set to the shutdown time. This enables withdrawal to occur via the standard `settleExpired` function."
      },
      "withdraw((uint256))": {
        "details": "Reverts if the withdrawal puts this position's collateralization ratio below the global collateralization ratio. In that case, use `requestWithdrawal`. Might not withdraw the full requested amount to account for precision loss.",
        "params": {
          "collateralAmount": "is the amount of collateral to withdraw."
        },
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      },
      "withdrawLiquidation(uint256,address)": {
        "details": "If the dispute SUCCEEDED: the sponsor, liquidator, and disputer are eligible for payment. If the dispute FAILED: only the liquidator can receive payment. This method will revert if rewards have already been dispersed.",
        "params": {
          "liquidationId": "uniquely identifies the sponsor's liquidation.",
          "sponsor": "address of the sponsor associated with the liquidation."
        },
        "returns": {
          "_0": "data about rewards paid out."
        }
      },
      "withdrawPassedRequest()": {
        "details": "Might not withdraw the full requested amount in order to account for precision loss or if the full requested amount exceeds the collateral in the position (due to paying fees).",
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      }
    },
    "title": "Expiring Multi Party.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "cancelTransferPosition()": {
        "notice": "Cancels a pending transfer position request."
      },
      "cancelWithdrawal()": {
        "notice": "Cancels a pending withdrawal request."
      },
      "constructor": "Constructs the ExpiringMultiParty contract.",
      "create((uint256),(uint256))": {
        "notice": "Creates tokens by creating a new position or by augmenting an existing position. Pulls `collateralAmount` into the sponsor's position and mints `numTokens` of `tokenCurrency`."
      },
      "createLiquidation(address,(uint256),(uint256),(uint256),uint256)": {
        "notice": "Liquidates the sponsor's position if the caller has enough synthetic tokens to retire the position's outstanding tokens. Liquidations above a minimum size also reset an ongoing \"slow withdrawal\"'s liveness."
      },
      "deposit((uint256))": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` into the caller's position."
      },
      "depositTo(address,(uint256))": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` into the specified sponsor's position."
      },
      "dispute(uint256,address)": {
        "notice": "Disputes a liquidation, if the caller has enough collateral to post a dispute bond and pay a fixed final fee charged on each price request."
      },
      "emergencyShutdown()": {
        "notice": "Premature contract settlement under emergency circumstances."
      },
      "emergencyUpdateDAOAddress(address)": {
        "notice": "Update DAO address under emergency circumstances"
      },
      "expire()": {
        "notice": "Locks contract state in expired and requests oracle price."
      },
      "getCollateral(address)": {
        "notice": "Accessor method for a sponsor's collateral."
      },
      "getCurrentTime()": {
        "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
      },
      "getLiquidations(address)": {
        "notice": "Gets all liquidation information for a given sponsor address."
      },
      "getOutstandingRegularFees(uint256)": {
        "notice": "Fetch any regular fees that the contract has pending but has not yet paid. If the fees to be paid are more than the total collateral within the contract then the totalPaid returned is full contract collateral amount."
      },
      "gulp()": {
        "notice": "Removes excess collateral balance not counted in the PfC by distributing it out pro-rata to all sponsors."
      },
      "payRegularFees()": {
        "notice": "Pays UMA DVM regular fees (as a % of the collateral pool) to the Store contract."
      },
      "pfc()": {
        "notice": "Gets the current profit from corruption for this contract in terms of the collateral currency."
      },
      "redeem((uint256))": {
        "notice": "Burns `numTokens` of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`."
      },
      "remargin()": {
        "notice": "Theoretically supposed to pay fees and move money between margin accounts to make sure they reflect the NAV of the contract. However, this functionality doesn't apply to this contract."
      },
      "repay((uint256))": {
        "notice": "Burns `numTokens` of `tokenCurrency` to decrease sponsors position size, without sending back `collateralCurrency`. This is done by a sponsor to increase position CR. Resulting size is bounded by minSponsorTokens."
      },
      "requestTransferPosition()": {
        "notice": "Requests to transfer ownership of the caller's current position to a new sponsor address. Once the request liveness is passed, the sponsor can execute the transfer and specify the new sponsor."
      },
      "requestWithdrawal((uint256))": {
        "notice": "Starts a withdrawal request that, if passed, allows the sponsor to withdraw` from their position."
      },
      "setCurrentTime(uint256)": {
        "notice": "Sets the current time."
      },
      "settleExpired()": {
        "notice": "After a contract has passed expiry all token holders can redeem their tokens for underlying at the prevailing price defined by the DVM from the `expire` function."
      },
      "totalPositionCollateral()": {
        "notice": "Accessor method for the total collateral stored within the PricelessPositionManager."
      },
      "transferPositionPassedRequest(address)": {
        "notice": "After a passed transfer position request (i.e., by a call to `requestTransferPosition` and waiting `withdrawalLiveness`), transfers ownership of the caller's current position to `newSponsorAddress`."
      },
      "transformCollateralRequirement((uint256))": {
        "notice": "Accessor method to calculate a transformed collateral requirement using the finanical product library specified during contract deployment. If no library was provided then no modification to the collateral requirement is done."
      },
      "transformPrice((uint256),uint256)": {
        "notice": "Accessor method to compute a transformed price using the finanicalProductLibrary specified at contract deployment. If no library was provided then no modification to the price is done."
      },
      "transformPriceIdentifier(uint256)": {
        "notice": "Accessor method to compute a transformed price identifier using the finanicalProductLibrary specified at contract deployment. If no library was provided then no modification to the identifier is done."
      },
      "variableExpiration(uint256)": {
        "notice": "Variable contract expiration under pre-defined circumstances."
      },
      "withdraw((uint256))": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` from the sponsor's position to the sponsor."
      },
      "withdrawLiquidation(uint256,address)": {
        "notice": "After a dispute has settled or after a non-disputed liquidation has expired, anyone can call this method to disperse payments to the sponsor, liquidator, and disdputer."
      },
      "withdrawPassedRequest()": {
        "notice": "After a passed withdrawal request (i.e., by a call to `requestWithdrawal` and waiting `withdrawalLiveness`), withdraws `positionData.withdrawalRequestAmount` of collateral currency."
      }
    },
    "notice": "Convenient wrapper for Liquidatable.",
    "version": 1
  }
}